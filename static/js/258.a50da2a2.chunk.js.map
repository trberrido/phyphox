{"version":3,"file":"static/js/258.a50da2a2.chunk.js","mappings":"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","sources":["utils/notation.jsx","components/visualizations/singleNumber.jsx","components/visualizations/background.jsx","components/visualizations/axis.jsx","components/visualizations/histogram.jsx","components/visualizations/graph.jsx","components/visualizations/visualization.jsx","components/experiment.jsx","components/message.jsx","components/title.jsx"],"sourcesContent":["import * as d3 from \"d3\";\n\nconst formatValueAs = (value, notation) => {\n\tconst scientificNotation = d3.format('.1e');\n\treturn notation === 'Scientific' ? scientificNotation(parseFloat(value)) : parseFloat(value).toFixed(2);\n}\n\nexport default formatValueAs;","import formatValueAs from \"../../utils/notation\";\n\nconst VisualizationSingleNumber = (props) => {\n\treturn(<>\n\t\t<p className='visualization-number__output'>{formatValueAs(props.data, props.notation)}</p>\n\t\t<p className='visualization-number__unit'>{props.unit}</p>\n\t</>);\n}\n\nexport default VisualizationSingleNumber;","const Background = (props) => {\n\n\treturn (\n\t\t<rect\n\t\t\ttransform={`translate(${props.margins.left}, ${props.margins.top})`}\n\t\t\tstroke={props.stroke} fill='transparent'\n\t\t\twidth={props.width}\n\t\t\theight={props.height}\n\t\t/>\n\t);\n}\n\nexport default Background;","import { useMemo } from \"react\";\nimport * as d3 from \"d3\";\nimport formatValueAs from \"../../utils/notation\";\n\nconst AxisY = (props) => {\n\n\tconst dimensions = props.dimensions;\n\tconst margins = props.margins;\n\n\tconst ticks = useMemo(() => {\n\t\treturn props.yScale\n\t\t\t\t\t\t.ticks(4)\n\t\t\t\t\t\t.filter(tick => {\n\t\t\t\t\t\t\treturn (Number.isInteger(tick))\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map((value) => {\n\t\t\t\t\t\t\treturn ({value: value, yOffset: props.yScale(value)})\n\t\t\t\t\t\t})\n\t}, [props]);\n\n\treturn (\n\t\t<svg >\n\t\t\t{\n\t\t\t\tprops.label ?\n\t\t\t\t\t<text\n\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\ttransform='rotate(-90)'\n\t\t\t\t\t\ttextAnchor='end'\n\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\tx={margins.top * -1}\n\t\t\t\t\t\ty='30' >\n\t\t\t\t\t\t\t{props.label}\n\t\t\t\t\t\t</text>\n\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t}\n\t\t\t<path d={[\n\t\t\t\t'M', margins.left, margins.top,\n\t\t\t\t'v', dimensions.height - (margins.top + margins.bottom),\n\t\t\t].join(' ')} fill='none' stroke='currentColor' />\n\t\t\t{\n\t\t\t\tticks.map(({value, yOffset}) => (\n\t\t\t\t\t<g\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\ttransform={`translate(0, ${yOffset + margins.top})`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<line x1={margins.left} x2={dimensions.width - margins.right} stroke={props.colors.stick} />\n\t\t\t\t\t\t<text\n\t\t\t\t\t\t\ttransform={`translate(${margins.left - 10}, ${(props.type === 'Histogram') ? 0 : 10})`}\n\t\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\t\ttextAnchor='end'\n\t\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{(props.type === 'Graph' && props.notation === 'Scientific') ? formatValueAs(value, props.notation) : value}\n\t\t\t\t\t\t</text>\n\n\t\t\t\t\t</g>\n\n\t\t\t\t))\n\t\t\t}\n\t\t</svg>\n\t);\n}\n\nconst AxisX = (props) => {\n\n\tconst dimensions = props.dimensions;\n\tconst margins = props.margins;\n\n\tconst ticks = useMemo(() => {\n\t\treturn props.xScale.ticks(4)\n\t\t\t.map(value => ({ value, xOffset: props.xScale(value)}))\n\t}, [props]);\n\n\treturn (\n\t\t<svg >\n\t\t{\n\t\t\t\tprops.label ?\n\t\t\t\t\t<text\n\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\ttextAnchor='end'\n\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\tx={dimensions.width - margins.right}\n\t\t\t\t\t\ty={dimensions.height - 8}\n\t\t\t\t\t>{props.label}</text>\n\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t}\n\t\t\t<path d={[\n\t\t\t\t\t'M', margins.left, (dimensions.height - margins.bottom),\n\t\t\t\t\t'h', dimensions.width - (margins.left + margins.right)\n\t\t\t\t].join(' ')}\n\t\t\t\tfill='none' stroke='currentColor' />\n\t\t\t\t{\n\t\t\t\t\tticks.map(({value, xOffset}, index) => (\n\t\t\t\t\t\t<g\n\t\t\t\t\t\t\tkey={value + index.toString()}\n\t\t\t\t\t\t\ttransform={`translate(${xOffset + margins.left}, 0)`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<line\n\t\t\t\t\t\t\t\ty1={margins.top}\n\t\t\t\t\t\t\t\ty2={dimensions.height - margins.bottom}\n\t\t\t\t\t\t\t\tstroke={props.colors.stick} />\n\n\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\ttransform={`translate(0,${dimensions.height + margins.top - margins.bottom})`}\n\t\t\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\t\t\ttextAnchor='middle'\n\t\t\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{props.notation === 'Scientific' ? formatValueAs(value, props.notation) : value}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t</svg>\n\t);\n}\n\nexport {\n\tAxisX,\n\tAxisY\n}","import { useMemo } from 'react';\n\nimport * as d3 from \"d3\";\n\nimport Background from \"./background\";\nimport { AxisX, AxisY } from \"./axis\";\n\nimport formatValueAs from \"../../utils/notation\";\n\nconst Bar = (props) => {\n\n\tconst maxHeight = props.dimensions.height - (props.margins.top + props.margins.bottom);\n\tconst minWdith = props.dimensions.width / props.bins;\n\tconst width = props.xScale(props.bucket.x1) - props.xScale(props.bucket.x0) ? props.xScale(props.bucket.x1) - props.xScale(props.bucket.x0) : minWdith;\n\n\treturn (\n\t\t<rect\n\t\t\tstroke='black'\n\t\t\tfill='white'\n\t\t\topacity={.8}\n\t\t\tx={props.xScale(props.bucket.x0)}\n\t\t\twidth={width}\n\t\t\ty={props.yScale(props.bucket.length)}\n\t\t\theight={maxHeight - props.yScale(props.bucket.length)}\n\t\t/>\n\t);\n\n}\n\n\nconst VisualizationHistogram = (props) => {\n\n\tconst colors = props.colors;\n\tconst margins = props.margins;\n\tconst data = props.data;\n\tconst dimensions = props.dimensions;\n\tconst domain = props.domain;\n\tconst bins = props.bins ? parseInt(props.bins) : 10;\n\n\tconst buckets = useMemo(() => {\n\t\tconst [min, max] = d3.extent(data);\n\t\tconst thresholds = d3.range(min, max, (max - min) / bins);\n\t\tconst bucketor = d3.bin().thresholds(thresholds)\n\t\treturn bucketor(data);\n\t}, [data, bins]);\n\n\tconst yScale = useMemo(()=>{\n\t\treturn d3\n\t\t\t.scaleLinear()\n\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t.domain([0, 1.1 * Math.max(...buckets.map((bucket) => bucket.length))])\n\t\t\t.nice()\n\t}, [buckets, dimensions, margins]);\n\n\tconst xScale = useMemo(() => {\n\t\tconst getMinMax = () => {\n\t\t\tlet [min, max] = d3.extent(data);\n\t\t\tif (domain.x.min)\n\t\t\t\tmin = domain.x.min;\n\t\t\tif (domain.x.max)\n\t\t\t\tmax = domain.x.max;\n\t\t\treturn [min, max];\n\t\t};\n\t\tconst [min, max] = getMinMax();\n\t\treturn d3\n\t\t\t.scaleLinear()\n\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t.domain([min, max])\n\t}, [data, dimensions, margins, domain]);\n\n\treturn (\n\t\t<>\n\t\t\t<svg width={dimensions.width} height={dimensions.height} >\n\t\t\t\t<rect\n\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`}\n\t\t\t\t\tfill={colors.background}\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t/>\n\t\t\t\t<g\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`}>\n\t\t\t\t\t{\n\t\t\t\t\t\tbuckets.map((bucket, index) => (\n\t\t\t\t\t\t\t<Bar key={index.toString()}\n\t\t\t\t\t\t\t\tbins={bins}\n\t\t\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\t\t\tbucket={bucket}\n\t\t\t\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\t\t\t\tmargins={margins}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</g>\n\t\t\t\t<AxisY\n\t\t\t\t\ttype='Histogram'\n\t\t\t\t\tyScale={yScale}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.y ? props.axisLabel.y : false }\n\t\t\t\t/>\n\t\t\t\t<AxisX\n\t\t\t\t\txScale={xScale}\n\t\t\t\t\tnotation={props.notation}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.x ? props.axisLabel.x : false }\n\t\t\t\t/>\n\t\t\t\t<Background\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\tstroke={colors.text}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t/>\n\t\t\t</svg>\n\n\n\t\t\t<p className='histogram-infos'>\n\n\t\t\t\t<span className='histogram-infos__item'>mean: {formatValueAs(d3.mean(data), props.notation)}</span>\n\t\t\t\t<span className='histogram-infos__item'>median: {formatValueAs(d3.median(data), props.notation)}</span>\n\t\t\t\t<span className='histogram-infos__item'>deviation: {data.length > 1 ? formatValueAs(d3.deviation(data), props.notation) : ' - '}</span>\n\n\t\t\t</p>\n\n\t\t</>\n\t);\n\n}\n\nexport default VisualizationHistogram;","import { useEffect, useMemo, useRef, useState } from 'react';\n\nimport * as d3 from \"d3\";\n\nimport Background from \"./background\";\nimport { AxisX, AxisY } from \"./axis\";\n\nconst Legendes = (props) => {\n\treturn (<div className='graph-legendes__wrapper'>\n\t\t{\n\t\t\tprops.data.map((element, index) => {\n\t\t\t\tif (element.idline){\n\t\t\t\t\treturn (\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='graph-legende'\n\t\t\t\t\t\t\tkey={element.idline + '_' + index.toString()}>\n\t\t\t\t\t\t\t<div style={{background:element.colorline}} className='graph-legende__colorsquare'></div>\n\t\t\t\t\t\t\t<p className='graph-legende__text'>{element.idline}</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t})\n\t\t}\n\t</div>);\n}\n\nconst Path = (props) => {\n\n\treturn (\n\t\t<path\n\t\t\tfill='none'\n\t\t\tstroke={props.color}\n\t\t\tstrokeWidth={3}\n\t\t\td={\n\t\t\tprops.coordinates.x.map((spot, index) => (\n\t\t\t\t\t(!index ? 'M ' : ' L ') +  props.xScale(spot) + ' ' + (props.yScale(props.coordinates.y[index])) \n\t\t\t\t)\n\t\t\t\t).join(' ')\n\t\t\t}\n\t\t/>\n\t)\n\n}\n\nconst Plots = (props) => {\n\n\treturn (<>\n\t\t{\n\n\t\t\tprops.plots.x.map((plot, index) => (\n\t\t\t\t<circle\n\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\tcx={props.xScale(plot)}\n\t\t\t\t\tcy={props.yScale(props.plots.y[index])}\n\t\t\t\t\tr={6}\n\t\t\t\t\tfill={props.color ? props.color : 'white'} />\n\t\t\t))\n\t\t}\n\t</>)\n\n}\n\n\nconst VisualizationGraph = (props) => {\n\n\tconst margins = props.margins;\n\tconst domain = props.domain;\n\tconst lines = props.lines;\n\tconst fits = props.data.fits ? props.data.fits : null;\n\tconst measures = props.data.measures ? props.data.measures : null;\n\tconst colors = props.colors;\n\tconst dimensions = props.dimensions;\n\tconst ref = useRef(null);\n\tconst coloredFits = Object.keys(fits).length ? lines.map((line) => (\n\t\t{\n\t\t\tcoordinates: fits[line.idline],\n\t\t\tcolor: line.colorline,\n\t\t\tstyle: line.styleline\n\t\t}\n\t)) : null;\n\tconst linesMinMax = useMemo(() => {\n\n\t\tif (measures === null && fits === null)\n\t\t\treturn null;\n\n\t\tconst everyLines = [...measures, ...Object.values(fits)];\n\t\tconst everyMinMax = everyLines.map((line) => {\n\t\t\treturn ({\n\t\t\t\tx0: Math.min(...line['x']),\n\t\t\t\tx1: Math.max(...line['x']),\n\t\t\t\ty0: Math.min(...line['y']),\n\t\t\t\ty1: Math.max(...line['y'])\n\t\t\t});\n\t\t})\n\n\t\tconst minMaxFromData = everyMinMax.reduce((previous, current) => (\n\t\t\t{\n\t\t\t\tx0: previous.x0 < current.x0 ? previous.x0 : current.x0,\n\t\t\t\tx1: previous.x1 > current.x1 ? previous.x1 : current.x1,\n\t\t\t\ty0: previous.y0 < current.y0 ? previous.y0 : current.y0,\n\t\t\t\ty1: previous.y1 > current.y1 ? previous.y1 : current.y1\n\t\t\t}\n\t\t));\n\n\t\treturn ({\n\t\t\tx0: domain.x.min ? domain.x.min : minMaxFromData.x0,\n\t\t\tx1: domain.x.max ? domain.x.max : minMaxFromData.x1,\n\t\t\ty0: domain.y.min ? domain.y.min : minMaxFromData.y0,\n\t\t\ty1: domain.y.max ? domain.y.max : minMaxFromData.y1\n\t\t});\n\n\t}, [measures, fits, domain]);\n\n\tconst [scales, setScales] = useState({\n\t\tx: d3\n\t\t\t.scaleLinear()\n\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t.domain([linesMinMax.x0, linesMinMax.x1]),\n\t\ty: d3\n\t\t\t.scaleLinear()\n\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t.domain([linesMinMax.y0, linesMinMax.y1]).nice()\n\t});\n\n\tconst whiteSpace = (min, max) => {\n\t\treturn (max - min) * 0.05;\n\t}\n\n\tconst xWhisteSpace = whiteSpace(linesMinMax.x0, linesMinMax.x1);\n\tconst yWhisteSpace = whiteSpace(linesMinMax.y0, linesMinMax.y1);\n\n\tuseEffect(() => {\n\t\tsetScales({\n\t\t\tx: d3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t\t.domain([linesMinMax.x0 - xWhisteSpace, linesMinMax.x1 + xWhisteSpace]),\n\t\t\ty: d3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t\t.domain([linesMinMax.y0 - yWhisteSpace, linesMinMax.y1 + yWhisteSpace])\n\t\t\t\t.nice()\n\t\t})\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dimensions, linesMinMax, xWhisteSpace, yWhisteSpace])\n\n\tuseEffect(() => {\n\n\t\tif (props.isOnGoingExperiment)\n\t\t\treturn ;\n\n\t\tconst zoom = d3\n\t\t.zoom()\n\t\t.scaleExtent([0.9,3])\n\t\t.translateExtent([[0, 0], [dimensions.width, dimensions.height]])\n\t\t.on('zoom', (e) => {\n\n\t\t\tconst zoomTransform = e.transform;\n\t\t\tconst newXScale = zoomTransform.rescaleX(scales.x)\n\t\t\tconst newYScale = zoomTransform.rescaleY(scales.y)\n\n\t\t\tsetScales({\n\t\t\t\tx: d3\n\t\t\t\t\t.scaleLinear()\n\t\t\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t\t\t.domain(newXScale.domain()),\n\t\t\t\ty: d3\n\t\t\t\t\t.scaleLinear()\n\t\t\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t\t\t.domain(newYScale.domain())\n\t\t\t\t\t.nice()\n\t\t\t})\n\n\t\t})\n\n\t\td3.select(ref.current).call(zoom)\n\n\t//\treturn () => { zoom.on('zoom', null) }\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dimensions, props.isOnGoingExperiment])\n\n\treturn (\n\t<>\n\n\t\t\t<svg width={dimensions.width} height={dimensions.height} ref={ref} >\n\t\t\t\t<rect\n\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`}\n\t\t\t\t\tfill={colors.background}\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t/>\n\t\t\t\t<defs>\n\t\t\t\t<clipPath id='clipath'>\n\t\t\t\t\t<rect\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\t\t\tx='0' y='0' />\n\t\t\t\t</clipPath>\n\t\t\t\t</defs>\n\n\t\t\t\t\t<g\tid='svggraph'\n\t\t\t\t\t\tclipPath='url(#clipath)'\n\t\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`} >\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmeasures.map((measure, index) => (\n\t\t\t\t\t\t\t\t<Plots\n\t\t\t\t\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\t\t\t\t\txScale={scales.x}\n\t\t\t\t\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\t\t\t\t\tplots={measure}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\tcoloredFits ?\n\t\t\t\t\t\t\t\t\tObject.entries(coloredFits).map(([fitname, fit]) => (\n\t\t\t\t\t\t\t\t\t\tfit.coordinates ?\n\t\t\t\t\t\t\t\t\t\t\tfit.style === 'Solid' ?\n\t\t\t\t\t\t\t\t\t\t\t\t<Path\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={fitname}\n\t\t\t\t\t\t\t\t\t\t\t\t\txScale={scales.x}\n\t\t\t\t\t\t\t\t\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcoordinates={fit.coordinates}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={fit.color}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t:\t<Plots\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={fitname}\n\t\t\t\t\t\t\t\t\t\t\t\t\txScale={scales.x}\n\t\t\t\t\t\t\t\t\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={fit.color}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplots={fit.coordinates}\t/>\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</g>\n\n\t\t\t\t<AxisY\n\t\t\t\t\ttype='Graph'\n\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.y ? props.axisLabel.y : false }\n\t\t\t\t\tnotation={props.notation}\n\t\t\t\t/>\n\t\t\t\t<AxisX\n\t\t\t\t\txScale={scales.x}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.x ? props.axisLabel.x : false }\n\t\t\t\t\tnotation={props.notation}\n\t\t\t\t/>\n\t\t\t\t<Background\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\tstroke={colors.text}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t/>\n\t\t\t</svg>\n\n\t\t\t<Legendes data={lines} />\n\n\t\t</>\n\n\t);\n\n}\n\nexport default VisualizationGraph;","import { useState, useRef, useEffect, useMemo } from 'react';\n\nimport VisualizationSingleNumber from \"./singleNumber\";\nimport VisualizationHistogram from \"./histogram\";\nimport VisualizationGraph from \"./graph\";\n\nimport Message from '../message.jsx';\nimport Loader from '../loader.jsx';\n\nimport './visualization.css';\nimport { ButtonIcon } from '../button';\n\nconst WaitingData = (props) => {\n\n\tif (props.isOnGoingExperiment)\n\t\treturn <Loader />\n\telse\n\t\treturn <Message message='No data to display.' />\n\n}\n\nconst VisualizationFooter = (props) => {\n\n\tconst url = props.url + '/visualizations/' + props.index;\n\n\treturn (\n\t\t<div className='visualization__footer'>\n\t\t\t<div className='visualization-footer__item-left'>\n\t\t\t\t<input\n\t\t\t\t\tclassName='visualization-footer__item visualization-footer__button-fullscreen'\n\t\t\t\t\tonClick={props.handleClick}\n\t\t\t\t\tvalue={props.isFullscreen ? 'zoom_in_map' : 'zoom_out_map'}\n\t\t\t\t\ttype='button' />\n\t\t\t</div>\n\t\t\t{\n\t\t\t\t!props.isOnGoingExperiment ?\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={url}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noreferrer'\n\t\t\t\t\t\tclassName='visualization-footer__item visualization-footer__dl'\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className='visualization-footer__dl-icon'>download</span>Download data (.json)\n\t\t\t\t\t</a>\n\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t}\n\t\t</div>\n\t)\n\n}\n\nconst Visualization = (props) => {\n\n\tconst margins = {\n\t\ttop: 30,\n\t\tright: 25,\n\t\tbottom: 100,\n\t\tleft: 125\n\t}\n\tconst colors = {\n\t\ttext: '#ADADAD',\n\t\tbackground: '#1B1A1A',\n\t\tstick: '#ADADAD47'\n\t}\n\tconst visualization = props.data;\n\tconst [isFullscreen, setIsFullscreen] = useState(false);\n\tconst ref = useRef(null);\n\tconst domain = useMemo(() => {\n\n\t\treturn (\n\t\t\t{\n\t\t\t\tx: {\n\t\t\t\t\tmin: visualization.xmin !== 'undefined' && !isNaN(parseFloat(visualization.xmin)) ? parseFloat(visualization.xmin) : false,\n\t\t\t\t\tmax: visualization.xmax !== 'undefined' && !isNaN(parseFloat(visualization.xmax)) ? parseFloat(visualization.xmax) : false\n\t\t\t\t},\n\t\t\t\ty: {\n\t\t\t\t\tmin: visualization.ymin !== 'undefined' && !isNaN(parseFloat(visualization.ymin)) ? parseFloat(visualization.ymin) : false,\n\t\t\t\t\tmax: visualization.ymax !== 'undefined' && !isNaN(parseFloat(visualization.ymax)) ? parseFloat(visualization.ymax) : false\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\n\t}, [visualization.xmin, visualization.xmax, visualization.ymin, visualization.ymax]);\n\n\tconst [dimensions, setDimensions] = useState({width: 0, height: window.innerHeight * (isFullscreen ? .8 : .7)});\n\n\tconst toggleFullscreen = () => {\n\t\tsetIsFullscreen(!isFullscreen);\n\t}\n\n\tuseEffect(() => {\n\n\t\tconst captureEscape = (e) => {\n\t\t\tif (e.key === 'Escape')\n\t\t\t\ttoggleFullscreen()\n\t\t}\n\n\t\tif (isFullscreen)\n\t\t\twindow.addEventListener('keyup', captureEscape);\n\n\t\treturn () => { window.removeEventListener('keyup', captureEscape) }\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [isFullscreen])\n\n\tuseEffect(() => {\n\n\t\tconst refWrapper = ref.current;\n\t\tconst resizeObs = new ResizeObserver(\n\t\t\t(entries) => {\n\t\t\t\tconst entry = entries[0];\n\t\t\t\tif (entry.contentRect.width !== dimensions.width){\n\t\t\t\t\tsetDimensions({\n\t\t\t\t\t\twidth: entry.contentRect.width,\n\t\t\t\t\t\theight: window.innerHeight * (isFullscreen ? .8 : .7)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tresizeObs.observe(refWrapper);\n\t\treturn () => resizeObs.unobserve(refWrapper)\n\n\t}, [dimensions, isFullscreen, ref])\n\n\tconst filteredData = useMemo(() => {\n\n\t\tif (visualization.displayedData.length === 0)\n\t\t\treturn visualization.displayedData;\n\n\t\tif (domain.x.min === false && domain.x.max === false\n\t\t\t&& domain.y.min === false && domain.y.max === false)\n\t\t\treturn visualization.displayedData;\n\n\t\tif (visualization.type === 'Histogram'){\n\n\t\t\tconst isInDomain = (item) => {\n\t\t\t\tif ((domain.x.min === false || item >= domain.x.min)\n\t\t\t\t\t&& (domain.x.max === false || item <= domain.x.max)){\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn visualization.displayedData.filter(isInDomain)\n\t\t}\n\n\t\tif (visualization.type === 'Graph'){\n\n\t\t\treturn visualization.displayedData;\n\t\t\t/*\n\t\t\tconst filterItem = (item) => {\n\n\t\t\t\tconst newItem = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: []\n\t\t\t\t};\n\t\t\t\titem.x.forEach((value, index) => {\n\n\t\t\t\t\tif (((domain.x.min === false || value >= domain.x.min)\n\t\t\t\t\t\t&& (domain.x.max === false || value <= domain.x.max))\n\t\t\t\t\t\t&&\n\t\t\t\t\t\t((domain.y.min === false || item.y[index] >= domain.y.min)\n\t\t\t\t\t\t&& (domain.y.max === false || item.y[index] <= domain.y.max))\n\t\t\t\t\t){\n\t\t\t\t\t\tnewItem.x.push(value)\n\t\t\t\t\t\tnewItem.y.push(item.y[index])\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t\treturn newItem;\n\n\t\t\t}\n\n\t\t\tlet filteredMeasures = [];\n\t\t\tvisualization.displayedData.measures.forEach((item) => {\n\n\t\t\t\tconst newItem = filterItem(item);\n\n\t\t\t\tif (newItem.x.length)\n\t\t\t\t\tfilteredMeasures.push(newItem)\n\n\t\t\t});\n\n\t\t\tlet filteredFits = {};\n\t\t\tObject.entries(visualization.displayedData.fits).forEach(([key, value]) => {\n\t\t\t\tconst newItem = filterItem(value);\n\t\t\t\tif (newItem.x.length)\n\t\t\t\t\tfilteredFits[key] = newItem;\n\t\t\t})\n\n\t\t\tif (!filteredMeasures.length && !Object.keys(filteredFits).length){\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tmeasures: filteredMeasures,\n\t\t\t\tfits: filteredFits\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\treturn visualization.displayedData;\n\n\t}, [visualization.displayedData, domain, visualization.type]);\n\n\treturn (\n\n\t\t<article className={'visualization' + (isFullscreen ? ' visualization--fullscreen' : '') + ' visualization--' + visualization.type.toLowerCase() } >\n\n\t\t\t<div className='visualization__frame'>\n\n\t\t\t\t{\n\t\t\t\t\tisFullscreen ?\n\t\t\t\t\t\t<ButtonIcon\n\t\t\t\t\t\t\thandleClick={toggleFullscreen}\n\t\t\t\t\t\t\tclasses={'visualization__close-button'}\n\t\t\t\t\t\t\ticon='close'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t: null\n\t\t\t\t}\n\n\t\t\t\t<div className='visualization__inner-padding'>\n\n\t\t\t\t\t<div className='visualization__header'>\n\t\t\t\t\t\t<h2 className='visualization__title'>{visualization.title}</h2>\n\t\t\t\t\t\t<p className='visualization__participants-number'>\n\t\t\t\t\t\t\t<span>{visualization.contributions_total ? visualization.contributions_total : 0}</span>\n\t\t\t\t\t\t\t<span className='visualization__participants-icon'>group</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='visualization__wrapper' ref={ref} >\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t(dimensions.width === 0 || filteredData.length === 0)  ?\n\t\t\t\t\t\t\t\t<WaitingData isOnGoingExperiment={props.isOnGoingExperiment} />\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\t\t'Single Number':<VisualizationSingleNumber\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tunit={visualization.unit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={filteredData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotation={visualization.notation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\t/>,\n\n\t\t\t\t\t\t\t\t\t'Histogram': \t<VisualizationHistogram\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdomain={domain}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbins={visualization.bins}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolors={colors}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taxisLabel={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: visualization.labelx,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: visualization.labely\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotation={visualization.notation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={filteredData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargins={margins} />,\n\n\t\t\t\t\t\t\t\t\t'Graph':  \t\t<VisualizationGraph\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolors={colors}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdomain={domain}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taxisLabel={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: visualization.labelx,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: visualization.labely\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotation={visualization.notation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={filteredData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlines={visualization.lines}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargins={margins} />\n\t\t\t\t\t\t\t\t}[visualization.type]\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t{\n\t\t\t\t\tvisualization.description ?\n\t\t\t\t\t\t<p className='visualization__description'>{visualization.description}</p>\n\t\t\t\t\t:\n\t\t\t\t\t\tnull\n\t\t\t\t}\n\n\t\t\t</div>\n\t\t\t<VisualizationFooter\n\t\t\t\tisFullscreen={isFullscreen}\n\t\t\t\thandleClick={toggleFullscreen}\n\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\n\t\t\t\tindex={props.index}\n\t\t\t\turl={props.url} />\n\t\t</article>\n\n\t);\n}\n\nexport default Visualization;","/*\n\n\t<Experiment\n\t\t<Visualisations : [\n\t\t\t{\n\n\t\t\t\t\tSingleNumber || Histogram || Graph\n\t\t\t\t\tAxisX, AxisY\n\t\t\t\t\tBackground\n\t\t\t\t\tVisualizationFooter\n\t\t\t}\n\t\t\t...\n\t\t] />\n\t/>\n\n\n*/\n\nimport { useContext, useEffect, useState } from 'react';\n\nimport Visualization from './visualizations/visualization.jsx';\nimport {Title} from '../components/title.jsx';\nimport Loader from '../components/loader';\nimport Message from '../components/message.jsx';\nimport { AppStateContext } from '../context.jsx';\n\nimport loadingGIF from '../images/loading.gif';\n\nconst Experiment = (props) => {\n\n\tconst [experiment, setExperiment] = useState({\n\t\tisLoaded: false,\n\t\terror: false,\n\t\tdata: null\n\t});\n\n\tconst setIsAppListening = useContext(AppStateContext).setIsAppListening;\n\n\tuseEffect(() => {\n\n\t\tif (!props.isOnGoingExperiment && experiment.isLoaded)\n\t\t\treturn ;\n\n\t\tconst fetchExperiment = (fetchURL) => {\n\t\t\tfetch(fetchURL, {credentials: 'include'})\n\t\t\t.then(response => response.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tif (result.hasOwnProperty('error')){\n\t\t\t\t\t\tsetExperiment ({...experiment,\n\t\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\t\terror: result.error\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (result === 'closing')\n\t\t\t\t\t\t\tsetIsAppListening(false);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetExperiment({\n\t\t\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t\t\tdata: result\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tsetExperiment ({...experiment,\n\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\terror: String(error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (props.isOnGoingExperiment){\n\t\t\tconst interval = setInterval(\n\t\t\t\tfetchExperiment,\n\t\t\t\t1000,\n\t\t\t\tprops.fetchURL\n\t\t\t);\n\t\t\treturn () => { clearInterval(interval) }\n\t\t} else {\n\t\t\tfetchExperiment(props.fetchURL);\n\t\t}\n\n\t}, [experiment, props, setIsAppListening]);\n\n\tif (!experiment.isLoaded)\n\t\treturn <Loader />\n\n\tif (experiment.error)\n\t\treturn <Message type='error' message={experiment.error} />\n\n\treturn (<>\n\t\t<Title\n\t\t\theader={props.title}\n\t\t\tcontent={experiment.data.title}\n\t\t\ticon={props.isOnGoingExperiment ? false : 'square_foot'}\n\t\t\timage={props.isOnGoingExperiment ? loadingGIF : false}\n\t\t\t/>\n\t\t<p className='experiment__description'>{experiment.data.description}</p>\n\t\t{\n\t\t\texperiment.data.visualizations.map((visualization, index) => (\n\t\t\t\t<Visualization\n\t\t\t\t\tindex={index}\n\t\t\t\t\turl={props.fetchURL}\n\t\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\n\t\t\t\t\tkey={visualization.title + '_' + index.toString()}\n\t\t\t\t\tdata={visualization} />\n\t\t\t))\n\t\t}\n\t</>);\n};\n\nexport default Experiment;","import React from 'react';\nimport './message.css';\n\nconst Message = (props) => {\n\treturn (\n\t\t<p className={\"message message--\" + (props.type ? props.type : 'info')}>{props.message}</p>\n\t)\n}\n\nexport default Message;","import React, { useContext } from 'react';\n\nimport './title.css';\n\nimport { AppStateContext } from '../context.jsx';\n\nconst TitleLight = (props) => {\n\t// made for 404 error page, unable to get context\n\treturn (\n\t\t<div className='title'>\n\t\t\t<p className='title__header'>\n\t\t\t\t{ props.header }\n\t\t\t\t{\n\t\t\t\t\tprops.icon ? \n\t\t\t\t\t<span className='title__icon'>\n\t\t\t\t\t\t{props.icon}\n\t\t\t\t\t</span>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tprops.image ?\n\t\t\t\t\t<img className='title__image' alt='' src={props.image} />\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</p>\n\t\t\t<h1 className='title__content'>{ props.content }</h1>\n\t\t</div>\n\t);\n}\n\nconst Title = (props) => {\n\n\tconst isAppListening = useContext(AppStateContext).isAppListening;\n\n\tdocument.title = (isAppListening ? '🟩' : '🟧') + ' phyphox, ' + props.content;\n\t\n\treturn (\n\t\t<TitleLight\n\t\t\theader={props.header}\n\t\t\tcontent={props.content}\n\t\t\timage={props.image}\n\t\t\ticon={props.icon} />\n\t)\n\t\n}\n\nexport {Title, TitleLight};"],"names":["value","notation","scientificNotation","d3","parseFloat","toFixed","props","className","formatValueAs","data","unit","transform","margins","left","top","stroke","fill","width","height","AxisY","dimensions","ticks","useMemo","yScale","filter","tick","Number","isInteger","map","yOffset","label","textAnchor","fontSize","x","y","d","bottom","join","x1","x2","right","colors","stick","type","AxisX","xScale","xOffset","index","y1","y2","toString","Bar","maxHeight","minWdith","bins","bucket","x0","opacity","length","domain","parseInt","buckets","min","max","thresholds","bucketor","range","Math","nice","getMinMax","background","axisLabel","text","Legendes","element","idline","style","colorline","Path","color","strokeWidth","coordinates","spot","Plots","plots","plot","cx","cy","r","lines","fits","measures","ref","useRef","coloredFits","Object","keys","line","styleline","linesMinMax","minMaxFromData","values","y0","reduce","previous","current","useState","scales","setScales","whiteSpace","xWhisteSpace","yWhisteSpace","useEffect","isOnGoingExperiment","zoom","scaleExtent","translateExtent","on","e","zoomTransform","newXScale","rescaleX","newYScale","rescaleY","call","id","clipPath","measure","entries","fitname","fit","WaitingData","message","VisualizationFooter","url","onClick","handleClick","isFullscreen","href","target","rel","visualization","setIsFullscreen","xmin","isNaN","xmax","ymin","ymax","window","innerHeight","setDimensions","toggleFullscreen","captureEscape","key","addEventListener","removeEventListener","refWrapper","resizeObs","ResizeObserver","entry","contentRect","observe","unobserve","filteredData","displayedData","item","toLowerCase","classes","icon","title","contributions_total","labelx","labely","description","isLoaded","error","experiment","setExperiment","setIsAppListening","useContext","AppStateContext","fetchExperiment","fetchURL","fetch","credentials","then","response","json","result","hasOwnProperty","String","interval","setInterval","clearInterval","header","content","image","visualizations","TitleLight","alt","src","Title","isAppListening","document"],"sourceRoot":""}
{"version":3,"file":"static/js/175.17c7bedb.chunk.js","mappings":"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","sources":["utils/notation.jsx","components/visualizations/singleNumber.jsx","components/visualizations/background.jsx","components/visualizations/axis.jsx","components/visualizations/histogram.jsx","components/visualizations/graph.jsx","components/visualizations/visualization.jsx","components/experiment.jsx","components/message.jsx","components/title.jsx"],"sourcesContent":["import * as d3 from \"d3\";\n\nconst formatValueAs = (value, notation) => {\n\tconst scientificNotation = d3.format('.1e');\n\treturn notation === 'Scientific' ? scientificNotation(parseFloat(value)) : parseFloat(value).toFixed(2);\n}\n\nexport default formatValueAs;","import formatValueAs from \"../../utils/notation\";\n\nconst VisualizationSingleNumber = (props) => {\n\tlet dataSN ;\n\tif (isNaN(formatValueAs(props.data, props.notation))){\n\t\tdataSN = \"_.__\";\n\t} else {\n\t\tdataSN =  formatValueAs(props.data, props.notation);\n\t}\n\treturn(<>\n\t\t<p className='visualization-number__output'>{dataSN}</p>\n\t\t<p className='visualization-number__unit'>{props.unit}</p>\n\t</>);\n}\n\nexport default VisualizationSingleNumber;","const Background = (props) => {\n\n\treturn (\n\t\t<rect\n\t\t\ttransform={`translate(${props.margins.left}, ${props.margins.top})`}\n\t\t\tstroke={props.stroke} fill='transparent'\n\t\t\twidth={props.width}\n\t\t\theight={props.height}\n\t\t/>\n\t);\n}\n\nexport default Background;","import { useMemo } from \"react\";\nimport * as d3 from \"d3\";\nimport formatValueAs from \"../../utils/notation\";\n\nconst AxisY = (props) => {\n\n\tconst dimensions = props.dimensions;\n\tconst margins = props.margins;\n\n\tconst ticks = useMemo(() => {\n\t\treturn props.yScale\n\t\t\t\t\t\t.ticks(4)\n\t\t\t\t\t\t.filter(tick => {\n\t\t\t\t\t\t\treturn (Number.isInteger(tick))\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map((value) => {\n\t\t\t\t\t\t\treturn ({value: value, yOffset: props.yScale(value)})\n\t\t\t\t\t\t})\n\t}, [props]);\n\n\treturn (\n\t\t<svg >\n\t\t\t{\n\t\t\t\tprops.label ?\n\t\t\t\t\t<text\n\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\ttransform='rotate(-90)'\n\t\t\t\t\t\t//textAnchor='end'  // caption at the top of the axis\n\t\t\t\t\t\ttextAnchor='middle'  // caption at the middle of the axis\n\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\t//x={margins.top * -1 } // caption at the top of the axis\n\t\t\t\t\t\tx={- dimensions.height/2 } // caption at the middle of the axis\n\t\t\t\t\t\ty='30' >\n\t\t\t\t\t\t\t{props.label}\n\t\t\t\t\t\t</text>\n\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t}\n\t\t\t<path d={[\n\t\t\t\t'M', margins.left, margins.top,\n\t\t\t\t'v', dimensions.height - (margins.top + margins.bottom),\n\t\t\t].join(' ')} fill='none' stroke='currentColor' />\n\t\t\t{\n\t\t\t\tticks.map(({value, yOffset}) => (\n\t\t\t\t\t<g\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\ttransform={`translate(0, ${yOffset + margins.top})`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<line x1={margins.left} x2={dimensions.width - margins.right} stroke={props.colors.stick} />\n\t\t\t\t\t\t<text\n\t\t\t\t\t\t\ttransform={`translate(${margins.left - 10}, ${(props.type === 'Histogram') ? 0 : 10})`}\n\t\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\t\ttextAnchor='end'\n\t\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{(props.type === 'Graph' && props.notation === 'Scientific') ? formatValueAs(value, props.notation) : value}\n\t\t\t\t\t\t</text>\n\n\t\t\t\t\t</g>\n\n\t\t\t\t))\n\t\t\t}\n\t\t</svg>\n\t);\n}\n\nconst AxisX = (props) => {\n\n\tconst dimensions = props.dimensions;\n\tconst margins = props.margins;\n\n\tconst ticks = useMemo(() => {\n\t\treturn props.xScale.ticks(4)\n\t\t\t.map(value => ({ value, xOffset: props.xScale(value)}))\n\t}, [props]);\n\n\treturn (\n\t\t<svg >\n\t\t{\n\t\t\t\tprops.label ?\n\t\t\t\t\t<text\n\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t// textAnchor='end' // caption at the right of the axis\n\t\t\t\t\t\ttextAnchor='middle' // caption at the middle of the axis\n\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\t//x={dimensions.width - margins.right} // caption at the right of the axis\n\t\t\t\t\t\tx={dimensions.width/2} // caption at the middle of the axis\n\t\t\t\t\t\ty={dimensions.height - 8}\n\t\t\t\t\t>{props.label}</text>\n\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t}\n\t\t\t<path d={[\n\t\t\t\t\t'M', margins.left, (dimensions.height - margins.bottom),\n\t\t\t\t\t'h', dimensions.width - (margins.left + margins.right)\n\t\t\t\t].join(' ')}\n\t\t\t\tfill='none' stroke='currentColor' />\n\t\t\t\t{\n\t\t\t\t\tticks.map(({value, xOffset}, index) => (\n\t\t\t\t\t\t<g\n\t\t\t\t\t\t\tkey={value + index.toString()}\n\t\t\t\t\t\t\ttransform={`translate(${xOffset + margins.left}, 0)`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<line\n\t\t\t\t\t\t\t\ty1={margins.top}\n\t\t\t\t\t\t\t\ty2={dimensions.height - margins.bottom}\n\t\t\t\t\t\t\t\tstroke={props.colors.stick} />\n\n\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\ttransform={`translate(0,${dimensions.height + margins.top - margins.bottom})`}\n\t\t\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\t\t\ttextAnchor='middle'\n\t\t\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{props.notation === 'Scientific' ? formatValueAs(value, props.notation) : value}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t</svg>\n\t);\n}\n\nexport {\n\tAxisX,\n\tAxisY\n}","import { useMemo } from 'react';\n\nimport * as d3 from \"d3\";\n\nimport Background from \"./background\";\nimport { AxisX, AxisY } from \"./axis\";\n\nimport formatValueAs from \"../../utils/notation\";\n\nconst Bar = (props) => {\n\n\tconst maxHeight = props.dimensions.height - (props.margins.top + props.margins.bottom);\n\tconst width = (props.dimensions.width - props.margins.left - props.margins.right)/ props.bins ; \n\treturn (\n\t\t<rect\n\t\t\tstroke='black'\n\t\t\tfill='white'\n\t\t\topacity={.8}\n\t\t\tx={props.xScale(props.bucket.x0)}\n\t\t\twidth={width}\n\t\t\ty={props.yScale(props.bucket.length)}\n\t\t\theight={maxHeight - props.yScale(props.bucket.length)}\n\t\t/>\n\t);\n\n}\n\n\nconst VisualizationHistogram = (props) => {\n\n\tconst colors = props.colors;\n\tconst margins = props.margins;\n\tconst data = props.data;\n\tconst dimensions = props.dimensions;\n\tconst domain = props.domain;\n\tconst bins = props.bins ? parseInt(props.bins) : 10;\n\n\tconst getMinMax = () => { // min max of the data except if defined by the user\n\t\tlet [min, max] = [0,1]; // default value, only used when no data are present and not defined by the user\n\t\tif (data.length>0){\n\t\t\t[min, max] = d3.extent(data);\n\t\t}\t\n\t\tif (typeof domain.x.min == \"number\") // value defined by the user\n\t\t\tmin = domain.x.min;\n\t\tif (typeof domain.x.max  == \"number\")\n\t\t\tmax = domain.x.max;\n\t\treturn [min, max];\n\t};\n\n\tconst buckets = useMemo(() => {\n\t\tlet [min, max] = getMinMax();\n\t\tconst thresholds = d3.range(min, max, (max - min) / bins);\n\t\tconst bucketor = d3.bin().thresholds(thresholds) // d3.js has some trouble dealing with fixed thresholds - X0 and X1 values are not correct\n\t\t// let's fix it\n\t\tlet bucketedData = bucketor(data);\t\n\t\tlet indexThresholds = 0 ;\n\t\tfor (let i = thresholds.length ; i >= 0; i-- ){\n\t\t\tif (thresholds[i] < bucketedData[0][0]) { // buckedData[0] is the list of data in the lowest bucket containing data\n\t\t\t\tindexThresholds = i ;  // this is the index of the thresholds that contains the lowest data\n\t\t\t\tbreak ;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\tfor (let i = 0 ; i < bucketedData.length ; i++){ // fixing the x0 and x1 - they should align with the thresholds values starting at indexThresholds\n\t\t\tbucketedData[i].x0 = thresholds[indexThresholds+i];\n\t\t\tbucketedData[i].x1 = bucketedData[i].x0 + (max - min) / bins ;\n\t\t}\n\n\n\t\treturn bucketedData;\n\t}, [data, bins]);\n\n\tconst yScale = useMemo(()=>{\n\t\treturn d3\n\t\t\t.scaleLinear()\n\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t.domain([0, 1.1 * Math.max(...buckets.map((bucket) => bucket.length))])\n\t\t\t.nice()\n\t}, [buckets, dimensions, margins]);\n\n\tconst xScale = useMemo(() => {\n\t\tconst [min, max] = getMinMax();\n\t\treturn d3\n\t\t\t.scaleLinear()\n\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t.domain([min, max])\n\t}, [data, dimensions, margins, domain]);\n\n\treturn (\n\t\t<>\n\t\t\t<svg width={dimensions.width} height={dimensions.height} >\n\t\t\t\t<rect\n\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`}\n\t\t\t\t\tfill={colors.background}\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t/>\n\t\t\t\t{(data.length>0) && // the <g></g> block is only added when data.length>0 - it draws the columns of the histogram\n\t\t\t\t<g\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`}>\n\t\t\t\t\t{\n\t\t\t\t\t\tbuckets.map((bucket, index) => (\n\t\t\t\t\t\t\t<Bar key={index.toString()}\n\t\t\t\t\t\t\t\tbins={bins}\n\t\t\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\t\t\tbucket={bucket}\n\t\t\t\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\t\t\t\tmargins={margins}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</g>}\n\t\t\t\t<AxisY\n\t\t\t\t\ttype='Histogram'\n\t\t\t\t\tyScale={yScale}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.y ? props.axisLabel.y : false }\n\t\t\t\t/>\n\t\t\t\t<AxisX\n\t\t\t\t\txScale={xScale}\n\t\t\t\t\tnotation={props.notation}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.x ? props.axisLabel.x : false }\n\t\t\t\t/>\n\t\t\t\t<Background\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\tstroke={colors.text}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t/>\n\t\t\t</svg>\n\n\n\t\t\t<p className='histogram-infos'>\n\n\t\t\t\t<span className='histogram-infos__item'>mean: {formatValueAs(d3.mean(data), props.notation)}</span>\n\t\t\t\t<span className='histogram-infos__item'>median: {formatValueAs(d3.median(data), props.notation)}</span>\n\t\t\t\t<span className='histogram-infos__item'>deviation: {data.length > 1 ? formatValueAs(d3.deviation(data), props.notation) : ' - '}</span>\n\n\t\t\t</p>\n\n\t\t</>\n\t);\n\n}\n\nexport default VisualizationHistogram;","import { useEffect, useMemo, useRef, useState } from 'react';\n\nimport * as d3 from \"d3\";\n\nimport Background from \"./background\";\nimport { AxisX, AxisY } from \"./axis\";\n\nconst Legendes = (props) => {\n\treturn (<div className='graph-legendes__wrapper'>\n\t\t{\n\t\t\tprops.data.map((element, index) => {\n\t\t\t\tif (element.idline){\n\t\t\t\t\treturn (\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='graph-legende'\n\t\t\t\t\t\t\tkey={element.idline + '_' + index.toString()}>\n\t\t\t\t\t\t\t<div style={{background:element.colorline}} className='graph-legende__colorsquare'></div>\n\t\t\t\t\t\t\t<p className='graph-legende__text'>{element.idline}</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t})\n\t\t}\n\t</div>);\n}\n\nconst Path = (props) => {\n\n\treturn (\n\t\t<path\n\t\t\tfill='none'\n\t\t\tstroke={props.color}\n\t\t\tstrokeWidth={3}\n\t\t\td={\n\t\t\tprops.coordinates.x.map((spot, index) => (\n\t\t\t\t\t(!index ? 'M ' : ' L ') +  props.xScale(spot) + ' ' + (props.yScale(props.coordinates.y[index])) \n\t\t\t\t)\n\t\t\t\t).join(' ')\n\t\t\t}\n\t\t/>\n\t)\n\n}\n\nconst Plots = (props) => {\n\n\treturn (<>\n\t\t{\n\n\t\t\tprops.plots.x.map((plot, index) => (\n\t\t\t\t<circle\n\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\tcx={props.xScale(plot)}\n\t\t\t\t\tcy={props.yScale(props.plots.y[index])}\n\t\t\t\t\tr={6}\n\t\t\t\t\tfill={props.color ? props.color : 'white'} />\n\t\t\t))\n\t\t}\n\t</>)\n\n}\n\n\nconst VisualizationGraph = (props) => {\n\n\tconst margins = props.margins;\n\tconst domain = props.domain;\n\tconst lines = props.lines;\n\tconst fits = props.data.fits ? props.data.fits : null;\n\tconst measures = props.data.measures ? props.data.measures : null;\n\tconst colors = props.colors;\n\tconst dimensions = props.dimensions;\n\tconst ref = useRef(null);\n\n\tconst coloredFits = fits ? (Object.keys(fits).length ? lines.map((line) => (\n\t\t{\n\t\t  coordinates: fits[line.idline],\n\t\t  color: line.colorline,\n\t\t  style: line.styleline\n\t\t}\n\t  )) : null) : null;\n\n\tconst linesMinMax = useMemo(() => {\n\n\t\tif (measures === null && fits === null)\n\t\t\treturn  ({\n\t\t\t\tx0: (typeof domain.x.min == \"number\") ? domain.x.min : 0, // default value when no data is present\n\t\t\t\tx1: (typeof domain.x.max == \"number\") ? domain.x.max : 1,\n\t\t\t\ty0: (typeof domain.y.min == \"number\") ? domain.y.min : 0,\n\t\t\t\ty1: (typeof domain.y.max == \"number\") ? domain.y.max : 1\n\t\t\t});\n\n\t\tconst everyLines = [...measures, ...Object.values(fits)];\n\t\tconst everyMinMax = everyLines.map((line) => {\n\t\t\treturn ({\n\t\t\t\tx0: Math.min(...line['x']),\n\t\t\t\tx1: Math.max(...line['x']),\n\t\t\t\ty0: Math.min(...line['y']),\n\t\t\t\ty1: Math.max(...line['y'])\n\t\t\t});\n\t\t})\n\n\t\tconst minMaxFromData = everyMinMax.reduce((previous, current) => (\n\t\t\t{\n\t\t\t\tx0: previous.x0 < current.x0 ? previous.x0 : current.x0,\n\t\t\t\tx1: previous.x1 > current.x1 ? previous.x1 : current.x1,\n\t\t\t\ty0: previous.y0 < current.y0 ? previous.y0 : current.y0,\n\t\t\t\ty1: previous.y1 > current.y1 ? previous.y1 : current.y1\n\t\t\t}\n\t\t));\n\n\t\treturn ({\n\t\t\tx0: (typeof domain.x.min == \"number\") ? domain.x.min : minMaxFromData.x0, // min max of the data, exept when set by the user\n\t\t\tx1: (typeof domain.x.max == \"number\") ? domain.x.max : minMaxFromData.x1,\n\t\t\ty0: (typeof domain.y.min == \"number\") ? domain.y.min : minMaxFromData.y0,\n\t\t\ty1: (typeof domain.y.max == \"number\") ? domain.y.max : minMaxFromData.y1\n\t\t});\n\n\t}, [measures, fits, domain]);\n\n\tconst [scales, setScales] = useState({\n\t\tx: d3\n\t\t\t.scaleLinear()\n\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t.domain([linesMinMax.x0, linesMinMax.x1]),\n\t\ty: d3\n\t\t\t.scaleLinear()\n\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t.domain([linesMinMax.y0, linesMinMax.y1]).nice()\n\t});\n\n\tconst whiteSpace = (min, max) => {\n\t\treturn (max - min) * 0.05;\n\t}\n\n\tconst xWhisteSpace = whiteSpace(linesMinMax.x0, linesMinMax.x1); // extra 5% margin when the max value is given by the data, so that the data point does not lie on the axis\n\tconst yWhisteSpace = whiteSpace(linesMinMax.y0, linesMinMax.y1);\n\tconst xWhisteSpaceMax = (typeof domain.x.max == \"number\") ? 0 : xWhisteSpace ; // if the value is set by the user, no extra margin\n\tconst xWhisteSpaceMin = (typeof domain.x.min == \"number\") ? 0 : xWhisteSpace ;\n\tconst yWhisteSpaceMax = (typeof domain.y.max == \"number\") ? 0 : yWhisteSpace ; \n\tconst yWhisteSpaceMin = (typeof domain.y.min == \"number\") ? 0 : yWhisteSpace ;\n\t\n\n\tuseEffect(() => {\n\t\tsetScales({\n\t\t\tx: d3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t\t.domain([linesMinMax.x0 - xWhisteSpaceMin, linesMinMax.x1 + xWhisteSpaceMax]),\n\t\t\ty: d3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t\t.domain([linesMinMax.y0 - yWhisteSpaceMin, linesMinMax.y1 + yWhisteSpaceMax])\n\t\t\t\t.nice()\n\t\t})\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dimensions, linesMinMax, xWhisteSpace, yWhisteSpace])\n\n\tuseEffect(() => {\n\n\t\tif (props.isOnGoingExperiment)\n\t\t\treturn ;\n\n\t\tconst zoom = d3\n\t\t.zoom()\n\t\t.scaleExtent([0.9,3])\n\t\t.translateExtent([[0, 0], [dimensions.width, dimensions.height]])\n\t\t.on('zoom', (e) => {\n\n\t\t\tconst zoomTransform = e.transform;\n\t\t\tconst newXScale = zoomTransform.rescaleX(scales.x)\n\t\t\tconst newYScale = zoomTransform.rescaleY(scales.y)\n\n\t\t\tsetScales({\n\t\t\t\tx: d3\n\t\t\t\t\t.scaleLinear()\n\t\t\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t\t\t.domain(newXScale.domain()),\n\t\t\t\ty: d3\n\t\t\t\t\t.scaleLinear()\n\t\t\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t\t\t.domain(newYScale.domain())\n\t\t\t\t\t.nice()\n\t\t\t})\n\n\t\t})\n\n\t\td3.select(ref.current).call(zoom)\n\n\t//\treturn () => { zoom.on('zoom', null) }\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dimensions, props.isOnGoingExperiment])\n\n\treturn (\n\t<>\n\n\t\t\t<svg width={dimensions.width} height={dimensions.height} ref={ref} >\n\t\t\t\t<rect\n\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`}\n\t\t\t\t\tfill={colors.background}\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t/>\n\t\t\t\t<defs>\n\t\t\t\t<clipPath id='clipath'>\n\t\t\t\t\t<rect\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\t\t\tx='0' y='0' />\n\t\t\t\t</clipPath>\n\t\t\t\t</defs>\n\t\t\t\t{!(measures === null && fits === null) && // if data are present, then plot\n\t\t\t\t\t<g\tid='svggraph'\n\t\t\t\t\t\tclipPath='url(#clipath)'\n\t\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`} >\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmeasures.map((measure, index) => (\n\t\t\t\t\t\t\t\t<Plots\n\t\t\t\t\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\t\t\t\t\txScale={scales.x}\n\t\t\t\t\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\t\t\t\t\tplots={measure}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\tcoloredFits ?\n\t\t\t\t\t\t\t\t\tObject.entries(coloredFits).map(([fitname, fit]) => (\n\t\t\t\t\t\t\t\t\t\tfit.coordinates ?\n\t\t\t\t\t\t\t\t\t\t\tfit.style === 'Solid' ?\n\t\t\t\t\t\t\t\t\t\t\t\t<Path\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={fitname}\n\t\t\t\t\t\t\t\t\t\t\t\t\txScale={scales.x}\n\t\t\t\t\t\t\t\t\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcoordinates={fit.coordinates}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={fit.color}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t:\t<Plots\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={fitname}\n\t\t\t\t\t\t\t\t\t\t\t\t\txScale={scales.x}\n\t\t\t\t\t\t\t\t\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={fit.color}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplots={fit.coordinates}\t/>\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</g>\n\t\t\t\t}\n\t\t\t\t<AxisY\n\t\t\t\t\ttype='Graph'\n\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.y ? props.axisLabel.y : false }\n\t\t\t\t\tnotation={props.notation}\n\t\t\t\t/>\n\t\t\t\t<AxisX\n\t\t\t\t\txScale={scales.x}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.x ? props.axisLabel.x : false }\n\t\t\t\t\tnotation={props.notation}\n\t\t\t\t/>\n\t\t\t\t<Background\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\tstroke={colors.text}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t/>\n\t\t\t</svg>\n\n\t\t\t<Legendes data={lines} />\n\n\t\t</>\n\n\t);\n\n}\n\nexport default VisualizationGraph;","import { useState, useRef, useEffect, useMemo } from 'react';\n\nimport VisualizationSingleNumber from \"./singleNumber\";\nimport VisualizationHistogram from \"./histogram\";\nimport VisualizationGraph from \"./graph\";\n\nimport Message from '../message.jsx';\nimport Loader from '../loader.jsx';\n\nimport './visualization.css';\nimport { ButtonIcon } from '../button';\n\nconst WaitingData = (props) => {\n\n\tif (props.isOnGoingExperiment)\n\t\treturn <Loader />\n\telse\n\t\treturn <Message message='No data to display.' />\n\n}\n\nconst VisualizationFooter = (props) => {\n\n\tconst url = props.url + '/visualizations/' + props.index;\n\n\treturn (\n\t\t<div className='visualization__footer'>\n\t\t\t<div className='visualization-footer__item-left'>\n\t\t\t\t<input\n\t\t\t\t\tclassName='visualization-footer__item visualization-footer__button-fullscreen'\n\t\t\t\t\tonClick={props.handleClick}\n\t\t\t\t\tvalue={props.isFullscreen ? 'zoom_in_map' : 'zoom_out_map'}\n\t\t\t\t\ttype='button' />\n\t\t\t</div>\n\t\t\t{\n\t\t\t\t!props.isOnGoingExperiment ?\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={url}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noreferrer'\n\t\t\t\t\t\tclassName='visualization-footer__item visualization-footer__dl'\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className='visualization-footer__dl-icon'>download</span>Download data (.json)\n\t\t\t\t\t</a>\n\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t}\n\t\t</div>\n\t)\n\n}\n\nconst Visualization = (props) => {\n\n\tconst margins = {\n\t\ttop: 30,\n\t\tright: 25,\n\t\tbottom: 100,\n\t\tleft: 125\n\t}\n\tconst colors = {\n\t\ttext: '#ADADAD',\n\t\tbackground: '#1B1A1A',\n\t\tstick: '#ADADAD47'\n\t}\n\tconst visualization = props.data;\n\tconst [isFullscreen, setIsFullscreen] = useState(false);\n\tconst ref = useRef(null);\n\tconst domain = useMemo(() => {\n\n\t\treturn (\n\t\t\t{\n\t\t\t\tx: {\n\t\t\t\t\tmin: visualization.xmin !== 'undefined' && !isNaN(parseFloat(visualization.xmin)) ? parseFloat(visualization.xmin) : false,\n\t\t\t\t\tmax: visualization.xmax !== 'undefined' && !isNaN(parseFloat(visualization.xmax)) ? parseFloat(visualization.xmax) : false\n\t\t\t\t},\n\t\t\t\ty: {\n\t\t\t\t\tmin: visualization.ymin !== 'undefined' && !isNaN(parseFloat(visualization.ymin)) ? parseFloat(visualization.ymin) : false,\n\t\t\t\t\tmax: visualization.ymax !== 'undefined' && !isNaN(parseFloat(visualization.ymax)) ? parseFloat(visualization.ymax) : false\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\n\t}, [visualization.xmin, visualization.xmax, visualization.ymin, visualization.ymax]);\n\n\tconst [dimensions, setDimensions] = useState({width: 0, height: window.innerHeight * (isFullscreen ? .8 : .7)});\n\n\tconst toggleFullscreen = () => {\n\t\tsetIsFullscreen(!isFullscreen);\n\t}\n\n\tuseEffect(() => {\n\n\t\tconst captureEscape = (e) => {\n\t\t\tif (e.key === 'Escape')\n\t\t\t\ttoggleFullscreen()\n\t\t}\n\n\t\tif (isFullscreen)\n\t\t\twindow.addEventListener('keyup', captureEscape);\n\n\t\treturn () => { window.removeEventListener('keyup', captureEscape) }\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [isFullscreen])\n\n\tuseEffect(() => {\n\n\t\tconst refWrapper = ref.current;\n\t\tconst resizeObs = new ResizeObserver(\n\t\t\t(entries) => {\n\t\t\t\tconst entry = entries[0];\n\t\t\t\tif (entry.contentRect.width !== dimensions.width){\n\t\t\t\t\tsetDimensions({\n\t\t\t\t\t\twidth: entry.contentRect.width,\n\t\t\t\t\t\theight: window.innerHeight * (isFullscreen ? .8 : .7)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tresizeObs.observe(refWrapper);\n\t\treturn () => resizeObs.unobserve(refWrapper)\n\n\t}, [dimensions, isFullscreen, ref])\n\n\tconst filteredData = useMemo(() => {\n\n\t\tif (visualization.displayedData.length === 0)\n\t\t\treturn visualization.displayedData;\n\n\t\tif (domain.x.min === false && domain.x.max === false\n\t\t\t&& domain.y.min === false && domain.y.max === false)\n\t\t\treturn visualization.displayedData;\n\n\t\tif (visualization.type === 'Histogram'){\n\n\t\t\tconst isInDomain = (item) => {\n\t\t\t\tif ((domain.x.min === false || item >= domain.x.min)\n\t\t\t\t\t&& (domain.x.max === false || item <= domain.x.max)){\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn visualization.displayedData.filter(isInDomain)\n\t\t}\n\n\t\tif (visualization.type === 'Graph'){\n\n\t\t\treturn visualization.displayedData;\n\t\t\t/*\n\t\t\tconst filterItem = (item) => {\n\n\t\t\t\tconst newItem = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: []\n\t\t\t\t};\n\t\t\t\titem.x.forEach((value, index) => {\n\n\t\t\t\t\tif (((domain.x.min === false || value >= domain.x.min)\n\t\t\t\t\t\t&& (domain.x.max === false || value <= domain.x.max))\n\t\t\t\t\t\t&&\n\t\t\t\t\t\t((domain.y.min === false || item.y[index] >= domain.y.min)\n\t\t\t\t\t\t&& (domain.y.max === false || item.y[index] <= domain.y.max))\n\t\t\t\t\t){\n\t\t\t\t\t\tnewItem.x.push(value)\n\t\t\t\t\t\tnewItem.y.push(item.y[index])\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t\treturn newItem;\n\n\t\t\t}\n\n\t\t\tlet filteredMeasures = [];\n\t\t\tvisualization.displayedData.measures.forEach((item) => {\n\n\t\t\t\tconst newItem = filterItem(item);\n\n\t\t\t\tif (newItem.x.length)\n\t\t\t\t\tfilteredMeasures.push(newItem)\n\n\t\t\t});\n\n\t\t\tlet filteredFits = {};\n\t\t\tObject.entries(visualization.displayedData.fits).forEach(([key, value]) => {\n\t\t\t\tconst newItem = filterItem(value);\n\t\t\t\tif (newItem.x.length)\n\t\t\t\t\tfilteredFits[key] = newItem;\n\t\t\t})\n\n\t\t\tif (!filteredMeasures.length && !Object.keys(filteredFits).length){\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tmeasures: filteredMeasures,\n\t\t\t\tfits: filteredFits\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\treturn visualization.displayedData;\n\n\t}, [visualization.displayedData, domain, visualization.type]);\n\n\treturn (\n\n\t\t<article className={'visualization' + (isFullscreen ? ' visualization--fullscreen' : '') + ' visualization--' + visualization.type.toLowerCase() } >\n\n\t\t\t<div className='visualization__frame'>\n\n\t\t\t\t{\n\t\t\t\t\tisFullscreen ?\n\t\t\t\t\t\t<ButtonIcon\n\t\t\t\t\t\t\thandleClick={toggleFullscreen}\n\t\t\t\t\t\t\tclasses={'visualization__close-button'}\n\t\t\t\t\t\t\ticon='close'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t: null\n\t\t\t\t}\n\n\t\t\t\t<div className='visualization__inner-padding'>\n\n\t\t\t\t\t<div className='visualization__header'>\n\t\t\t\t\t\t<h2 className='visualization__title'>{visualization.title}</h2>\n\t\t\t\t\t\t<p className='visualization__participants-number'>\n\t\t\t\t\t\t\t<span>{visualization.contributions_total ? visualization.contributions_total : 0}</span>\n\t\t\t\t\t\t\t<span className='visualization__participants-icon'>group</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='visualization__wrapper' ref={ref} >\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// (dimensions.width === 0 || filteredData.length === 0)  ?\n\t\t\t\t\t\t\t// \t<WaitingData isOnGoingExperiment={props.isOnGoingExperiment} />\n\t\t\t\t\t\t\t// :\n\t\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\t\t'Single Number':<VisualizationSingleNumber\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tunit={visualization.unit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={filteredData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotation={visualization.notation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\t/>,\n\n\t\t\t\t\t\t\t\t\t'Histogram': \t<VisualizationHistogram\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdomain={domain}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbins={visualization.bins}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolors={colors}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taxisLabel={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: visualization.labelx,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: visualization.labely\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotation={visualization.notation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={filteredData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargins={margins} />,\n\n\t\t\t\t\t\t\t\t\t'Graph':  \t\t<VisualizationGraph\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolors={colors}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdomain={domain}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taxisLabel={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: visualization.labelx,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: visualization.labely\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotation={visualization.notation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={filteredData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlines={visualization.lines}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargins={margins} />\n\t\t\t\t\t\t\t\t}[visualization.type]\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t{\n\t\t\t\t\tvisualization.description ?\n\t\t\t\t\t\t<p className='visualization__description'>{visualization.description}</p>\n\t\t\t\t\t:\n\t\t\t\t\t\tnull\n\t\t\t\t}\n\n\t\t\t</div>\n\t\t\t<VisualizationFooter\n\t\t\t\tisFullscreen={isFullscreen}\n\t\t\t\thandleClick={toggleFullscreen}\n\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\n\t\t\t\tindex={props.index}\n\t\t\t\turl={props.url} />\n\t\t</article>\n\n\t);\n}\n\nexport default Visualization;","/*\n\n\t<Experiment\n\t\t<Visualisations : [\n\t\t\t{\n\n\t\t\t\t\tSingleNumber || Histogram || Graph\n\t\t\t\t\tAxisX, AxisY\n\t\t\t\t\tBackground\n\t\t\t\t\tVisualizationFooter\n\t\t\t}\n\t\t\t...\n\t\t] />\n\t/>\n\n\n*/\n\nimport { useContext, useEffect, useState } from 'react';\n\nimport Visualization from './visualizations/visualization.jsx';\nimport {Title} from '../components/title.jsx';\nimport Loader from '../components/loader';\nimport Message from '../components/message.jsx';\nimport { AppStateContext } from '../context.jsx';\n\nimport loadingGIF from '../images/loading.gif';\n\nconst Experiment = (props) => {\n\n\tconst [experiment, setExperiment] = useState({\n\t\tisLoaded: false,\n\t\terror: false,\n\t\tdata: null\n\t});\n\n\tconst setIsAppListening = useContext(AppStateContext).setIsAppListening;\n\n\tuseEffect(() => {\n\n\t\tif (!props.isOnGoingExperiment && experiment.isLoaded)\n\t\t\treturn ;\n\n\t\tconst fetchExperiment = (fetchURL) => {\n\t\t\tfetch(fetchURL, {credentials: 'include'})\n\t\t\t.then(response => response.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tif (result.hasOwnProperty('error')){\n\t\t\t\t\t\tsetExperiment ({...experiment,\n\t\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\t\terror: result.error\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (result === 'closing')\n\t\t\t\t\t\t\tsetIsAppListening(false);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetExperiment({\n\t\t\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t\t\tdata: result\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tsetExperiment ({...experiment,\n\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\terror: String(error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (props.isOnGoingExperiment){\n\t\t\tconst interval = setInterval(\n\t\t\t\tfetchExperiment,\n\t\t\t\t1000,\n\t\t\t\tprops.fetchURL\n\t\t\t);\n\t\t\treturn () => { clearInterval(interval) }\n\t\t} else {\n\t\t\tfetchExperiment(props.fetchURL);\n\t\t}\n\n\t}, [experiment, props, setIsAppListening]);\n\n\tif (!experiment.isLoaded)\n\t\treturn <Loader />\n\n\tif (experiment.error)\n\t\treturn <Message type='error' message={experiment.error} />\n\n\treturn (<>\n\t\t<Title\n\t\t\theader={props.title}\n\t\t\tcontent={experiment.data.title}\n\t\t\ticon={props.isOnGoingExperiment ? false : 'square_foot'}\n\t\t\timage={props.isOnGoingExperiment ? loadingGIF : false}\n\t\t\t/>\n\t\t<p className='experiment__description'>{experiment.data.description}</p>\n\t\t{\n\t\t\texperiment.data.visualizations.map((visualization, index) => (\n\t\t\t\t<Visualization\n\t\t\t\t\tindex={index}\n\t\t\t\t\turl={props.fetchURL}\n\t\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\n\t\t\t\t\tkey={visualization.title + '_' + index.toString()}\n\t\t\t\t\tdata={visualization} />\n\t\t\t))\n\t\t}\n\t</>);\n};\n\nexport default Experiment;","import React from 'react';\nimport './message.css';\n\nconst Message = (props) => {\n\treturn (\n\t\t<p className={\"message message--\" + (props.type ? props.type : 'info')}>{props.message}</p>\n\t)\n}\n\nexport default Message;","import React, { useContext } from 'react';\n\nimport './title.css';\n\nimport { AppStateContext } from '../context.jsx';\n\nconst TitleLight = (props) => {\n\t// made for 404 error page, unable to get context\n\treturn (\n\t\t<div className='title'>\n\t\t\t<p className='title__header'>\n\t\t\t\t{ props.header }\n\t\t\t\t{\n\t\t\t\t\tprops.icon ? \n\t\t\t\t\t<span className='title__icon'>\n\t\t\t\t\t\t{props.icon}\n\t\t\t\t\t</span>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tprops.image ?\n\t\t\t\t\t<img className='title__image' alt='' src={props.image} />\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</p>\n\t\t\t<h1 className='title__content'>{ props.content }</h1>\n\t\t</div>\n\t);\n}\n\nconst Title = (props) => {\n\n\tconst isAppListening = useContext(AppStateContext).isAppListening;\n\n\tdocument.title = (isAppListening ? '🟩' : '🟧') + ' phyphox, ' + props.content;\n\t\n\treturn (\n\t\t<TitleLight\n\t\t\theader={props.header}\n\t\t\tcontent={props.content}\n\t\t\timage={props.image}\n\t\t\ticon={props.icon} />\n\t)\n\t\n}\n\nexport {Title, TitleLight};"],"names":["formatValueAs","value","notation","scientificNotation","d3","parseFloat","toFixed","props","dataSN","isNaN","data","_jsxs","_Fragment","children","_jsx","className","unit","transform","concat","margins","left","top","stroke","fill","width","height","AxisY","dimensions","ticks","useMemo","yScale","filter","tick","Number","isInteger","map","yOffset","label","textAnchor","fontSize","x","y","d","bottom","join","_ref","x1","x2","right","colors","stick","type","AxisX","xScale","xOffset","_ref2","index","y1","y2","toString","Bar","maxHeight","bins","opacity","bucket","x0","length","domain","parseInt","getMinMax","min","max","buckets","thresholds","bucketedData","bucketor","indexThresholds","i","range","Math","nice","background","axisLabel","Background","text","Legendes","element","idline","style","colorline","Path","color","strokeWidth","coordinates","spot","Plots","plots","plot","cx","cy","r","lines","fits","measures","ref","useRef","coloredFits","Object","keys","line","styleline","linesMinMax","y0","minMaxFromData","values","reduce","previous","current","scales","setScales","useState","whiteSpace","xWhisteSpace","yWhisteSpace","xWhisteSpaceMax","xWhisteSpaceMin","yWhisteSpaceMax","yWhisteSpaceMin","useEffect","isOnGoingExperiment","zoom","scaleExtent","translateExtent","on","e","zoomTransform","newXScale","rescaleX","newYScale","rescaleY","call","id","clipPath","measure","entries","fitname","fit","VisualizationFooter","url","onClick","handleClick","isFullscreen","href","target","rel","visualization","setIsFullscreen","xmin","xmax","ymin","ymax","setDimensions","window","innerHeight","toggleFullscreen","captureEscape","key","addEventListener","removeEventListener","refWrapper","resizeObs","ResizeObserver","entry","contentRect","observe","unobserve","filteredData","displayedData","isInDomain","item","toLowerCase","ButtonIcon","classes","icon","title","contributions_total","VisualizationSingleNumber","VisualizationHistogram","labelx","labely","VisualizationGraph","description","experiment","setExperiment","isLoaded","error","setIsAppListening","useContext","AppStateContext","fetchExperiment","fetchURL","fetch","credentials","then","response","json","result","hasOwnProperty","String","interval","setInterval","clearInterval","Message","message","Title","header","content","image","visualizations","Visualization","Loader","TitleLight","alt","src","isAppListening","document"],"sourceRoot":""}
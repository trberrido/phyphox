{"version":3,"file":"static/js/470.3f63a1e2.chunk.js","mappings":"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","sources":["components/configuration-form/visualization-form.jsx","components/configuration-form/types.jsx","components/configuration-form/configuration-form.jsx","components/form.jsx","components/spacer.jsx","components/title.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { Fieldset, LabeledInput, LabeledTextarea, Radio } from \"../form\";\nimport { ButtonIcon, ButtonAskingConfirmation, Button } from \"../button\";\nimport Spacer from '../spacer.jsx';\n\nconst VisualizationFormBody = (props) => {\n\tconst SpecificVisualizationType = props.typesAvailable[props.type].component;\n\treturn (\n\t\t<SpecificVisualizationType\n\t\t\tdata={props.visualization}\n\t\t\tindex={props.index}\n\t\t\thasPythonFile={props.visualization.pythonfile.name ? true : false}\n\t\t\tvisualizationFormUpdate={props.visualizationFormUpdate}\n\t\t\tgraphLinesAdd={props.graphLinesAdd ? props.graphLinesAdd : false }\n\t\t\tgraphLinesRemove={props.graphLinesRemove ? props.graphLinesRemove : false }\n\t\t\tgraphLinesUpdate={props.graphLinesUpdate ? props.graphLinesUpdate : false }\n\t\t\tgraphLinesStyleUpdate={props.graphLinesStyleUpdate ? props.graphLinesStyleUpdate : false }\n\t\t/>\n\t);\n}\n\nconst PythonHelp = () => (<>\n\t<a className='configuration__link' href={window.API + '/api/python'} rel='noreferrer' target='_blank'>Which version of python should I use ?</a>\n\t<a className='configuration__link' href='https://github.com/trberrido/phyphox/?tab=readme-ov-file#python-scripting' rel='noreferrer' target='_blank'>More informations and examples about python scripts</a>\n</>);\n\nconst VisualizationFormHeader = (props) => {\n\n\tconst notations = ['Decimal', 'Scientific'];\n\n\treturn (<>\n\t\t<LabeledInput\n\t\t\tid='title'\n\t\t\tplaceholder='Visualization title *'\n\t\t\tvalue={props.visualization.title}\n\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\ttype='text'\n\t\t\trequired={true} />\n\n\t\t<LabeledTextarea\n\t\t\tid='description'\n\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\tplaceholder='Comments'\n\t\t\tvalue={props.visualization.description} />\n\n\t\t<Fieldset legend='Python'>\n\t\t{\n\t\t\tprops.visualization.pythonfile.name ?\n\t\t\t\t<>\n\t\t\t\t\t<div>\n\t\t\t\t\t<ButtonAskingConfirmation\n\t\t\t\t\t\ttext={'Remove ' + props.visualization.pythonfile.name}\n\t\t\t\t\t\tconfirmedAction={props.fileInputRemove}\n\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\tprops.visualization.pythonfile.extravariables.map((variable, index) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\t\t\t\tclassName='form-extravariable__wrapper'\n\t\t\t\t\t\t\t\tdata-index={index.toString()}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<LabeledInput\n\t\t\t\t\t\t\t\t\tid={'extravariable_' + index.toString()}\n\t\t\t\t\t\t\t\t\tplaceholder='variable name'\n\t\t\t\t\t\t\t\t\tvalue={variable}\n\t\t\t\t\t\t\t\t\thandleChange={props.extraVariableUpdate}\n\t\t\t\t\t\t\t\t\ttype='text' />\n\n\t\t\t\t\t\t\t\t<ButtonIcon\n\t\t\t\t\t\t\t\t\tvalue='delete'\n\t\t\t\t\t\t\t\t\tclasses='form-extravariable__delete-button'\n\t\t\t\t\t\t\t\t\thandleClick={props.extraVariableRemove} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttext='Add a variable'\n\t\t\t\t\t\thandleClick={props.extraVariableAdd}\n\t\t\t\t\t\t/>\n\t\t\t\t\t<PythonHelp />\n\t\t\t\t</>\n\t\t\t:\n\t\t\t<>\n\t\t\t\t<LabeledInput\n\t\t\t\t\tid='pythonfile'\n\t\t\t\t\tplaceholder='Python file'\n\t\t\t\t\tmodificationCSS='variant'\n\t\t\t\t\thandleChange={props.fileInputAdd}\n\t\t\t\t\taccept='.py'\n\t\t\t\t\ttype='file'\n\t\t\t\t/>\n\t\t\t\t<PythonHelp />\n\t\t\t</>\n\t\t}\n\t\t</Fieldset>\n\n\t\t<Spacer size='small' />\n\n\t\t<Fieldset legend='Select type *'>\n\t\t\t{Object.keys(props.visualizationTypes).map((type, index) => (\n\t\t\t\t<Radio\n\t\t\t\t\tid={'type-' + props.index.toString()}\n\t\t\t\t\tplaceholder={type}\n\t\t\t\t\thandleChange={props.visualizationFormTypeUpdate}\n\t\t\t\t\tkey={index.toString() + '-' + type}\n\t\t\t\t\trequired={true}\n\t\t\t\t\tchecked={props.visualization.type === type ? true : false} />\n\t\t\t))}\n\t\t</Fieldset>\n\n\t\t<Fieldset legend='Notation *'>\n\t\t\t{notations.map((notation, index) => (\n\t\t\t\t<Radio\n\t\t\t\t\tid={'notation-' + props.index.toString()}\n\t\t\t\t\tplaceholder={notation}\n\t\t\t\t\thandleChange={props.visualizationFormNotationUpdate}\n\t\t\t\t\tkey={index.toString() + '-' + notation}\n\t\t\t\t\trequired={true}\n\t\t\t\t\tchecked={props.visualization.notation === notation ? true : false} />\n\t\t\t))}\n\t\t</Fieldset>\n\n\t</>);\n}\n\nconst VisualizationForm = (props) => {\n\treturn (\n\t\t<div data-index={props.index}\n\t\t\tclassName='configuration-visualization'>\n\n\t\t\t{props.isSingle ?\n\t\t\t\tnull :\n\t\t\t\t<ButtonIcon\n\t\t\t\tvalue='delete'\n\t\t\t\tclasses='configuration-visualization__delete-button'\n\t\t\t\thandleClick={props.visualizationFormRemove} />}\n\n\t\t\t<VisualizationFormHeader\n\t\t\t\tindex={props.index}\n\n\t\t\t\textraVariableAdd={props.extraVariableAdd}\n\t\t\t\textraVariableRemove={props.extraVariableRemove}\n\t\t\t\textraVariableUpdate={props.extraVariableUpdate}\n\n\t\t\t\tfileInputAdd={props.fileInputAdd}\n\t\t\t\tfileInputRemove={props.fileInputRemove}\n\n\t\t\t\tvisualizationTypes={props.visualizationTypes}\n\t\t\t\tvisualization={props.visualization}\n\t\t\t\tvisualizationFormTypeUpdate={props.visualizationFormTypeUpdate}\n\t\t\t\tvisualizationFormNotationUpdate={props.visualizationFormNotationUpdate}\n\t\t\t\tvisualizationFormUpdate={props.visualizationFormUpdate} />\n\n\t\t\t<Spacer size='small' />\n\n\t\t\t{props.type && <VisualizationFormBody\n\t\t\t\t\t\t\t\ttypesAvailable={props.visualizationTypes}\n\t\t\t\t\t\t\t\ttype={props.type}\n\t\t\t\t\t\t\t\tindex={props.index}\n\t\t\t\t\t\t\t\tvisualization={props.visualization}\n\t\t\t\t\t\t\t\tvalue={props.visualization.id}\n\t\t\t\t\t\t\t\tvisualizationFormUpdate={props.visualizationFormUpdate}\n\n\t\t\t\t\t\t\t\tgraphLinesAdd={props.graphLinesAdd ? props.graphLinesAdd : false}\n\t\t\t\t\t\t\t\tgraphLinesRemove={props.graphLinesRemove ? props.graphLinesRemove : false}\n\t\t\t\t\t\t\t\tgraphLinesUpdate={props.graphLinesUpdate ? props.graphLinesUpdate : false}\n\t\t\t\t\t\t\t\tgraphLinesStyleUpdate={props.graphLinesStyleUpdate ? props.graphLinesStyleUpdate : false}\n\t\t\t/>}\n\n\t</div>);\n}\n\n\nexport default VisualizationForm;","import React from \"react\";\nimport { lineTemplate } from \"../../utils/configuration-loader.jsx\";\nimport { Button, ButtonIcon } from '../button.jsx'\nimport { LabeledInput, Fieldset, Radio } from \"../form\";\nimport Spacer from '../spacer';\n\nconst SingleNumberForm = (props) => {\n\treturn (<>\n\t\t<Fieldset legend='phyphox data'>\n\t\t\t<LabeledInput\n\t\t\t\tid='id'\n\t\t\t\trequired={true}\n\t\t\t\tplaceholder='Data ID *'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tvalue={props.data.id ? props.data.id : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='text' />\n\t\t</Fieldset>\n\n\t\t<Spacer size='xxsmall' />\n\n\t\t<Fieldset legend='Options'>\n\t\t\t<LabeledInput\n\t\t\t\tid='unit'\n\t\t\t\tplaceholder='Unit'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tvalue={props.data.unit ? props.data.unit : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='text' />\n\t\t</Fieldset>\n\t</>);\n}\n\nconst HistogramForm = (props) => {\n\treturn (<>\n\t\t<Fieldset legend='phyphox data'>\n\t\t\t<LabeledInput\n\t\t\t\tid='id'\n\t\t\t\trequired={true}\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='Data ID *'\n\t\t\t\tvalue={props.data.id ? props.data.id : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='text' />\n\t\t</Fieldset>\n\n\t\t<Spacer size='xxsmall' />\n\n\t\t<Fieldset legend='Options'>\n\n\t\t\t<LabeledInput\n\t\t\t\tid='bins'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='Bins'\n\t\t\t\tvalue={props.data.bins ? props.data.bins : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='number' />\n\n\t\t\t<Spacer size='regular' />\n\n\t\t\t<LabeledInput\n\t\t\t\tid='labelx'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='x axis label'\n\t\t\t\tvalue={props.data.labelx ? props.data.labelx : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='text' />\n\n\t\t\t<LabeledInput\n\t\t\t\tid='labely'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='y axis label'\n\t\t\t\tvalue={props.data.labely ? props.data.labely : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='text' />\n\n\t\t\t<Spacer size='regular' />\n\n\t\t\t<LabeledInput\n\t\t\t\tid='xmin'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='x axis min'\n\t\t\t\tvalue={props.data.xmin ? props.data.xmin : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='number' />\n\n\t\t\t<LabeledInput\n\t\t\t\tid='xmax'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='x axis max'\n\t\t\t\tvalue={props.data.xmax ? props.data.xmax : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='number' />\n\n{\n\t/*\n\t<LabeledInput\n\t\tid='bucketsnumber'\n\t\tplaceholder='Number of buckets'\n\t\tvalue={props.data.bucketsnumber ? props.data.bucketsnumber : ''}\n\t\thandleChange={props.visualizationFormUpdate}\n\t\ttype='number' />\n\t*/\n}\n\t\t</Fieldset>\n\t</>)\n}\n\nconst GraphForm = (props) => {\n\tif (props.data['lines'] === undefined)\n\t\tprops.data['lines'] = [{...lineTemplate}];\n\tconst lineIsSingle = props.data.lines.length < 2 ? true : false;\n\n\treturn (<>\n\n\t\t<Fieldset legend='phyphox data'>\n\t\t\t<LabeledInput\n\t\t\t\tid='idx'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\trequired={true}\n\t\t\t\tplaceholder='Data ID x axis *'\n\t\t\t\tvalue={props.data.idx ? props.data.idx : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='text' />\n\t\t\t<LabeledInput\n\t\t\t\tid='idy'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\trequired={true}\n\t\t\t\tplaceholder='Data ID y axis *'\n\t\t\t\tvalue={props.data.idy ? props.data.idy : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='text' />\n\t\t</Fieldset>\n\n\t\t<Spacer size='xxsmall' />\n\n\t\t<Fieldset legend='Options' >\n\n\t\t\t<LabeledInput\n\t\t\t\tid='labelx'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='x axis label'\n\t\t\t\tvalue={props.data.labelx ? props.data.labelx : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='text' />\n\n\t\t\t<LabeledInput\n\t\t\t\tid='xmin'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='x axis min'\n\t\t\t\tvalue={props.data.xmin ? props.data.xmin : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='number' />\n\n\t\t\t<LabeledInput\n\t\t\t\tid='xmax'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='x axis max'\n\t\t\t\tvalue={props.data.xmax ? props.data.xmax : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='number' />\n\n\t\t\t<Spacer size='regular' />\n\n\t\t\t<LabeledInput\n\t\t\t\tid='labely'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='y axis label'\n\t\t\t\tvalue={props.data.labely ? props.data.labely : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='text' />\n\n\t\t\t<LabeledInput\n\t\t\t\tid='ymin'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='y axis min'\n\t\t\t\tvalue={props.data.ymin ? props.data.ymin : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='number' />\n\n\t\t\t<LabeledInput\n\t\t\t\tid='ymax'\n\t\t\t\tmodificationCSS='variant'\n\t\t\t\tplaceholder='y axis max'\n\t\t\t\tvalue={props.data.ymax ? props.data.ymax : ''}\n\t\t\t\thandleChange={props.visualizationFormUpdate}\n\t\t\t\ttype='number' />\n\n{\n\t/*\n\t<LabeledInput\n\t\tid='granularity'\n\t\tplaceholder='Granularity'\n\t\tvalue={props.data.granularity ? props.data.granularity : ''}\n\t\thandleChange={props.visualizationFormUpdate}\n\t\ttype='number' />\n\t*/\n}\n\n\t\t</Fieldset>\n\n{\n\t<>\n\t\t<Spacer size='xxsmall' />\n\n\t\t{\n\t\t\tprops.hasPythonFile ?\n\t\t\t<Fieldset legend='Customization'>\n\n\t\t\t\t{\n\t\t\t\t\tprops.data.lines.map((line, lineIndex) => (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={lineIndex.toString() + '_line'}\n\t\t\t\t\t\t\tdata-index={lineIndex.toString()}\n\t\t\t\t\t\t\tclassName='visualization-graph__line-list'>\n\n\t\t\t\t\t\t\t{lineIsSingle ? null :\n\t\t\t\t\t\t\t\t<ButtonIcon\n\t\t\t\t\t\t\t\t\tvalue='delete'\n\t\t\t\t\t\t\t\t\tclasses='graph-line__delete-button'\n\t\t\t\t\t\t\t\t\thandleClick={props.graphLinesRemove} />\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t<Fieldset\n\t\t\t\t\t\t\t\t\tclassName='form__fieldset--single-line'\n\t\t\t\t\t\t\t\t\tlegend='Select line style'\n\t\t\t\t\t\t\t\t\tlegendClassName='form-fieldset__legend--single-line'>\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t['Solid', 'Dotted'].map((shape, styleIndex) => (\n\n\t\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\t\tid={'styleline-' + props.index.toString() + '-' + lineIndex.toString()}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={shape}\n\t\t\t\t\t\t\t\t\t\t\thandleChange={props.graphLinesStyleUpdate}\n\t\t\t\t\t\t\t\t\t\t\tkey={styleIndex.toString() + '-linestyle'}\n\t\t\t\t\t\t\t\t\t\t\tchecked={line.styleline === shape ? true : false} />\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Fieldset>\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t<LabeledInput\n\t\t\t\t\t\t\t\tid='idline'\n\t\t\t\t\t\t\t\tplaceholder='Line id'\n\t\t\t\t\t\t\t\tvalue={line.idline ? line.idline : ''}\n\t\t\t\t\t\t\t\tmodificationCSS='variant'\n\t\t\t\t\t\t\t\thandleChange={props.graphLinesUpdate} />\n\n\t\t\t\t\t\t\t<LabeledInput\n\t\t\t\t\t\t\t\tid='colorline'\n\t\t\t\t\t\t\t\tplaceholder='Color'\n\t\t\t\t\t\t\t\ttype='color'\n\t\t\t\t\t\t\t\tmodificationCSS='variant'\n\t\t\t\t\t\t\t\tvalue={line.colorline ? line.colorline : '#ffffff'}\n\t\t\t\t\t\t\t\thandleChange={props.graphLinesUpdate} />\n\n\t\t\t\t\t{\n\t\t\t\t\t\t/*\n\n\t\t\t\t\t\t\t<Fieldset legend='Select line style'>\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t[\t{ name: 'Solid', value: 'solid'},\n\t\t\t\t\t\t\t\t\t\t{ name: 'Dashed', value: 'dashed'},\n\t\t\t\t\t\t\t\t\t\t{ name: 'Dotted', value: 'dotted'},\n\t\t\t\t\t\t\t\t\t].map((shape, styleIndex) => (\n\n\t\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\t\tid={'styleline-' + props.index.toString() + '-' + lineIndex.toString()}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder={shape.name}\n\t\t\t\t\t\t\t\t\t\t\thandleChange={props.graphLinesStyleUpdate}\n\t\t\t\t\t\t\t\t\t\t\tkey={styleIndex.toString() + '-linestyle'}\n\t\t\t\t\t\t\t\t\t\t\tchecked={line.style === shape.name ? true : false} />\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</Fieldset>\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))\n\n\t\t\t\t}\n\t\t\t\t<Button\n\t\t\t\t\ttext='Add a new line'\n\t\t\t\t\thandleClick={props.graphLinesAdd}\n\t\t\t\t\t/>\n\n\t\t\t</Fieldset>\n\t\t: null }\n\t\t</>\n\t}\n\t</>);\n\n}\n\nconst visualizationTypes = {\n\t'Single Number': {\n\t\tcomponent: SingleNumberForm,\n\t\tid: '', unit: ''\n\t},\n\t'Histogram': {\n\t\tcomponent: HistogramForm,\n\t\tid: '',\n\t\tlabelx: '', xmin: '', xmax: '',\n\t\tlabely: '', ymin: '', ymax: '',\n\t\tbins: ''\n\t},\n\t'Graph': {\n\t\tcomponent: GraphForm,\n\t\tidx: '', idy: '',\n\t\tlabelx: '', xmin: '', xmax: '',\n\t\tlabely: '', ymin: '', ymax: '',\n\t\tlines: []\n\t}\n}\n\nexport default visualizationTypes;","/*\n\tconfiguration form structure :\n\n\t\tconst project; --> contains all the data and is send via fetch on submit\n\n\t\t<form>\n\n\t\t\t<ConfigurationFormHeader />\n\n\t\t\t<ConfigurationFormBody>\n\n\t\t\t\t<VisualizationForm>\t\t\t\t\t--> repeatable element\n\t\t\t\t\t<VisualizationFormHeader />\n\t\t\t\t\t<VisualizationFormBody />\n\t\t\t\t</VisualizationForm>\n\n\t\t\t</ConfigurationFormBody>\n\n\t\t</form>\n*/\n\nimport React, { useState, /*useContext*/ } from 'react';\nimport { useLoaderData, useNavigate } from 'react-router-dom';\nimport Spacer from '../spacer';\nimport { Button } from '../button';\nimport Message from '../message.jsx';\nimport { Submit, LabeledInput, LabeledTextarea } from '../form';\nimport { lineTemplate, fileTemplate, visualizationTemplate } from '../../utils/configuration-loader';\nimport VisualizationForm from \"./visualization-form\";\nimport visualizationTypes from './types.jsx';\nimport './configuration-form.css';\n//import { AppStateContext } from '../../context.jsx';\n\nconst ConfigurationFormHeader = (props) => {\n\n\treturn (<>\n\n\t\t{props.error && <Message message={props.error} type='error' />}\n\n\t\t<LabeledInput\n\t\t\tid='title'\n\t\t\tplaceholder='Project title *'\n\t\t\tvalue={props.project.title}\n\t\t\thandleChange={props.projectFormUpdate}\n\t\t\ttype='text'\n\t\t\trequired={true}\t/>\n\n\t\t<LabeledTextarea\n\t\t\tid='description'\n\t\t\tplaceholder='Project description'\n\t\t\tvalue={props.project.description}\n\t\t\thandleChange={props.projectFormUpdate} />\n\n\t</>);\n}\n\n\nconst ConfigurationFormBody = (props) => {\n\tconst isSingle = props.visualizations.length < 2 ? true : false;\n\treturn (<>\n\n\t\t<h2 className='configuration-form__title'>List of visualizations</h2>\n\t\t<div className='configuration-form__visualizations-list'>\n\n\t\t\t{props.visualizations.map((visualization, index) => (\n\t\t\t\t<VisualizationForm\n\t\t\t\t\tkey={index.toString() + '-' + visualization.type}\n\t\t\t\t\tindex={index}\n\t\t\t\t\tisSingle={isSingle}\n\t\t\t\t\ttype={visualization.type}\n\t\t\t\t\tvisualization={visualization}\n\n\t\t\t\t\textraVariableAdd={props.extraVariableAdd}\n\t\t\t\t\textraVariableRemove={props.extraVariableRemove}\n\t\t\t\t\textraVariableUpdate={props.extraVariableUpdate}\n\n\t\t\t\t\tfileInputAdd={props.fileInputAdd}\n\t\t\t\t\tfileInputRemove={props.fileInputRemove}\n\n\t\t\t\t\tvisualizationTypes={props.visualizationTypes}\n\t\t\t\t\tvisualizationFormRemove={props.visualizationFormRemove}\n\t\t\t\t\tvisualizationFormUpdate={props.visualizationFormUpdate}\n\t\t\t\t\tvisualizationFormTypeUpdate={props.visualizationFormTypeUpdate}\n\t\t\t\t\tvisualizationFormNotationUpdate={props.visualizationFormNotationUpdate}\n\n\t\t\t\t\tgraphLinesAdd={visualization.type === 'Graph' ? props.graphLinesAdd : false }\n\t\t\t\t\tgraphLinesRemove={visualization.type === 'Graph' ? props.graphLinesRemove : false }\n\t\t\t\t\tgraphLinesUpdate={visualization.type === 'Graph' ? props.graphLinesUpdate : false }\n\t\t\t\t\tgraphLinesStyleUpdate={visualization.type === 'Graph' ? props.graphLinesStyleUpdate : false }\n\t\t\t\t\t/>\n\t\t\t))}\n\n\t\t</div>\n\n\t</>);\n}\n\nconst ConfigurationForm = (props) => {\n\n\tconst [project, setProject] = useState(useLoaderData());\n\n\tconst [formState, setFormState] = useState({\n\t\tisDisabled: false,\n\t\terror: false\n\t});\n\n\tconst navigate = useNavigate();\n\n\tconst ressource = (props.method === 'PUT' ? '/' + project.id + '.json': '');\n\n//\tconst setIsAppListening = useContext(AppStateContext).setIsAppListening;\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tsetFormState({...formState,\n\t\t\tisDisabled: true\n\t\t})\n\t\tconst headers = new Headers();\n\t\theaders.append('Content-Type', 'application/json');\n\t\tfetch(window.API + '/api/configurations' + ressource, {\n\t\t\tmethod: props.method,\n\t\t\tcredentials: 'include',\n\t\t\theaders: headers,\n\t\t\tbody: JSON.stringify(project)\n\t\t})\n\t\t.then((response) => { return response.json() })\n\t\t.then(\n\t\t\t(result) => {\n\t\t\t\tif (result.hasOwnProperty('error')){\n\t\t\t\t\tsetFormState({...formState,\n\t\t\t\t\t\tisDisabled: false,\n\t\t\t\t\t\terror: result.error\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnavigate('/administration')\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tsetFormState({...formState,\n\t\t\t\t\tisDisabled: false,\n\t\t\t\t\terror: error\n\t\t\t\t})\n\t\t\t}\n\t\t)\n\t}\n\n\tconst projectFormUpdate = (e) => {\n\t\tconst copy = structuredClone(project);\n\t\tcopy[e.target.name] = e.target.value;\n\t\tsetProject(copy);\n\t}\n\n\tconst fileInputAdd = (e) => {\n\t\tconst file = e.currentTarget.files[0];\n\t\tconst copy = structuredClone(project);\n\t\tconst index = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.onload = () => {\n\t\t\tcopy.visualizations[index].pythonfile.name = file.name;\n\t\t\tcopy.visualizations[index].pythonfile.data = fileReader.result;\n\t\t\tsetProject(copy);\n\t\t};\n\t\tfileReader.readAsDataURL(file);\n\t}\n\n\tconst extraVariableAdd = (e) => {\n\t\tconst index = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\tcopy.visualizations[index].pythonfile.extravariables.push('')\n\t\tsetProject(copy);\n\t}\n\tconst extraVariableRemove = (e) => {\n\t\tconst index = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\tconst variableIndex = e.currentTarget.closest('.form-extravariable__wrapper').dataset.index;\n\t\tcopy.visualizations[index].pythonfile.extravariables.splice(variableIndex, 1);\n\t\tsetProject(copy);\n\t}\n\tconst extraVariableUpdate = (e) => {\n\t\tconst index = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\tconst variableIndex = e.currentTarget.closest('.form-extravariable__wrapper').dataset.index;\n\t\tcopy.visualizations[index].pythonfile.extravariables[variableIndex] = e.target.value;\n\t\tsetProject(copy);\n\t}\n\n\tconst fileInputRemove = (e) => {\n\t\tconst index = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\tcopy.visualizations[index].pythonfile = structuredClone(fileTemplate);\n\t\tsetProject(copy);\n\t}\n\n\tconst visualizationFormAdd = (e) => {\n\t\te.preventDefault();\n\t\tconst newVisualizationsList = project.visualizations.concat(structuredClone(visualizationTemplate));\n\t\tconst copy = structuredClone(project);\n\t\tcopy.visualizations = newVisualizationsList;\n\t\tsetProject(copy);\n\t}\n\n\tconst visualizationFormRemove = (e) => {\n\t\tconst index = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\tcopy.visualizations.splice(index, 1);\n\t\tsetProject(copy);\n\t}\n\n\tconst visualizationFormUpdate = (e) => {\n\t\tconst index = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\tcopy.visualizations[index][e.target.name] = e.target.value;\n\t\tsetProject(copy);\n\t}\n\n\tconst visualizationFormTypeUpdate = (e) => {\n\t\tconst index = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\t// create a Set of all the keys from the differents visualizationTypes defined in types.jsx\n\t\tconst keys = new Set();\n\t\tfor (const types in visualizationTypes) {\n\t\t\tfor (const key in visualizationTypes[types]) {\n\t\t\t\tkeys.add(key);\n\t\t\t}\n\t\t}\n\t\t// remove the keys that are present in the current visualization type\n\t\t// so we have clean object\n\t\tkeys.forEach((key) => {\n\t\t\tif ( key in copy.visualizations[index])\n\t\t\t\tdelete copy.visualizations[index][key];\n\t\t});\n\t\tcopy.visualizations[index]['type'] = e.target.value;\n\t\tsetProject(copy);\n\t}\n\n\tconst visualizationFormNotationUpdate = (e) => {\n\t\tconst index = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\tcopy.visualizations[index]['notation'] = e.target.value;\n\t\tsetProject(copy);\n\t}\n\n\tconst graphLinesAdd = (e) => {\n\t\tconst visualizationIndex = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst newLines = project.visualizations[visualizationIndex].lines.concat({...lineTemplate});\n\t\tconst copy = structuredClone(project);\n\t\tcopy.visualizations[visualizationIndex].lines = newLines;\n\t\tsetProject(copy);\n\t}\n\n\tconst graphLinesRemove = (e) => {\n\t\tconst visualizationIndex = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst lineIndex = e.currentTarget.closest('.visualization-graph__line-list').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\tcopy.visualizations[visualizationIndex].lines.splice(lineIndex, 1);\n\t\tsetProject(copy);\n\t}\n\tconst graphLinesStyleUpdate = (e) => {\n\t\tconst visualizationIndex = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst lineIndex = e.currentTarget.closest('.visualization-graph__line-list').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\tcopy.visualizations[visualizationIndex].lines[lineIndex]['styleline'] = e.target.value;\n\t\tsetProject(copy);\n\t}\n\n\tconst graphLinesUpdate = (e) => {\n\t\tconst visualizationIndex = e.currentTarget.closest('.configuration-visualization').dataset.index;\n\t\tconst lineIndex = e.currentTarget.closest('.visualization-graph__line-list').dataset.index;\n\t\tconst copy = structuredClone(project);\n\t\tcopy.visualizations[visualizationIndex].lines[lineIndex][e.target.name] = e.target.value;\n\t\tsetProject(copy);\n\t}\n\n\treturn (\n\t\t<>\n\t\t<Spacer size='small' />\n\n\t\t<form className='form configuration-form' onSubmit={handleSubmit}>\n\n\t\t\t<ConfigurationFormHeader\n\t\t\t\tproject={project}\n\t\t\t\tprojectFormUpdate={projectFormUpdate}\n\t\t\t\terror={formState.error} />\n\n\t\t\t<Spacer size='large' />\n\n\t\t\t<ConfigurationFormBody\n\t\t\t\tvisualizations={project.visualizations}\n\t\t\t\tvisualizationTypes={visualizationTypes}\n\n\t\t\t\textraVariableAdd={extraVariableAdd}\n\t\t\t\textraVariableRemove={extraVariableRemove}\n\t\t\t\textraVariableUpdate={extraVariableUpdate}\n\n\t\t\t\tfileInputAdd={fileInputAdd}\n\t\t\t\tfileInputRemove={fileInputRemove}\n\t\t\t\tvisualizationFormRemove={visualizationFormRemove}\n\t\t\t\tvisualizationFormUpdate={visualizationFormUpdate}\n\t\t\t\tvisualizationFormTypeUpdate={visualizationFormTypeUpdate}\n\t\t\t\tvisualizationFormNotationUpdate={visualizationFormNotationUpdate}\n\n\t\t\t\tgraphLinesAdd={graphLinesAdd}\n\t\t\t\tgraphLinesRemove={graphLinesRemove}\n\t\t\t\tgraphLinesUpdate={graphLinesUpdate}\n\t\t\t\tgraphLinesStyleUpdate={graphLinesStyleUpdate}\n\t\t\t/>\n\n\t\t\t<div className='configuration-form__commands'>\n\t\t\t\t<Button icon='library_add' text='Add a new visualization' handleClick={visualizationFormAdd} />\n\t\t\t\t<Submit text='Save' disabled={formState.isDisabled} />\n\t\t\t</div>\n\n\t\t</form>\n\t\t</>\n\t);\n}\n\n\nexport default ConfigurationForm;","import React from 'react';\n\nimport './form.css';\n\nconst Fieldset = (props) => {\n\treturn (\n\t\t<fieldset className={'form__fieldset' + (props.className ? ' ' + props.className : '')}>\n\t\t\t<legend className={'form-fieldset__legend' + (props.legendClassName ? ' ' + props.legendClassName : '')}>{props.legend}</legend>\n\t\t\t{props.children}\n\t\t</fieldset>\n\t);\n}\n\nconst LabeledInput = (props) => {\n\n\tconst modificationCSS = props.modificationCSS ? props.modificationCSS : 'regular';\n\tconst classInputType = props.type === 'color' ? '-color' : '';\n\tconst classIsHidden = props.isHidden ? ' form__labeled-input-container--hidden' : '';\n\tconst min = props.min === 'undefined' ? null : props.min;\n\tconst max = props.max === 'undefined' ? null : props.max;\n\n\treturn (\n\t\t<div className={'form__labeled-input-container' + classIsHidden + (props.modificationCSS ? ' form__labeled-input-container--' + props.modificationCSS : '')} >\n\t\t\t<label\n\t\t\t\thtmlFor={props.id}\n\t\t\t\tclassName={'form__label form__label--' + modificationCSS }>\n\t\t\t\t\t{props.placeholder}\n\t\t\t</label>\n\t\t\t{\n\t\t\t\tprops.icon ?\n\t\t\t\t<span className='form__input-icon'>{props.icon}</span>\n\t\t\t\t: null\n\t\t\t}\n\t\t\t<input\n\t\t\t\treadOnly={props.readOnly}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.handleChange}\n\t\t\t\tname={props.id}\n\t\t\t\tclassName={\n\t\t\t\t\t'form__input' + classInputType\n\t\t\t\t\t+ ' form__input--' + modificationCSS\n\t\t\t\t\t+ (props.icon ? ' form__input-with-icon' : ' form__input-text-only')\n\t\t\t\t}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tmin={min}\n\t\t\t\tmax={max}\n\t\t\t\ttype={props.type ? props.type : 'text'}\n\t\t\t\taccept={props.accept ? props.accept : null}\n\t\t\t\trequired={props.required} />\n\t\t</div>\n\t);\n}\n\nconst Radio = (props) => {\n\treturn (<span className='input-radio__wrapper'>\n\t\t<input\n\t\t\tclassName='input-radio__input'\n\t\t\tonChange={props.handleChange}\n\t\t\tname={props.id}\n\t\t\trequired={props.required}\n\t\t\tvalue={props.placeholder}\n\t\t\tchecked={props.checked}\n\t\t\ttype='radio' />\n\t\t<label htmlFor={props.id} >\n\t\t\t{props.placeholder}\n\t\t</label>\n\t</span>)\n}\n\nconst LabeledTextarea = (props) => {\n\treturn (<>\n\t\t<label\n\t\t\thtmlFor={props.id}\n\t\t\tclassName='form__label form__label--regular'>\n\t\t\t\t{props.placeholder}\n\t\t</label>\n\t\t<textarea\n\t\t\tvalue={props.value}\n\t\t\tonChange={props.handleChange}\n\t\t\tname={props.id}\n\t\t\tclassName='form__textarea form__textarea--regular'\n\t\t\tplaceholder={props.placeholder}\n\t\t\ttype={props.type}\n\t\t\trequired={props.required} />\n\t</>)\n}\n\nconst Submit = (props) => {\n\treturn (\n\t\t<input\n\t\t\tclassName={'form__submit button button--important ' +  (props.disabled ? 'form__submit--disabled' : '') }\n\t\t\tdisabled={props.disabled}\n\t\t\ttype='submit'\n\t\t\tvalue={props.text} />\n\t);\n}\n\nexport {LabeledInput, LabeledTextarea, Submit, Radio, Fieldset};","import './spacer.css';\n\nconst Spacer = (props) => {\n\treturn (\n\t\t<div className={'spacer' + (props.size ? ('--' + props.size) : '')}></div>\n\t);\n}\n\nexport default Spacer;","import React, { useContext } from 'react';\n\nimport './title.css';\n\nimport { AppStateContext } from '../context.jsx';\n\nconst TitleLight = (props) => {\n\t// made for 404 error page, unable to get context\n\treturn (\n\t\t<div className='title'>\n\t\t\t<p className='title__header'>\n\t\t\t\t{ props.header }\n\t\t\t\t{\n\t\t\t\t\tprops.icon ? \n\t\t\t\t\t<span className='title__icon'>\n\t\t\t\t\t\t{props.icon}\n\t\t\t\t\t</span>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tprops.image ?\n\t\t\t\t\t<img className='title__image' alt='' src={props.image} />\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</p>\n\t\t\t<h1 className='title__content'>{ props.content }</h1>\n\t\t</div>\n\t);\n}\n\nconst Title = (props) => {\n\n\tconst isAppListening = useContext(AppStateContext).isAppListening;\n\n\tdocument.title = (isAppListening === true ? '🟩' : '🟧') + ' phyphox, ' + props.content;\n\t\n\treturn (\n\t\t<TitleLight\n\t\t\theader={props.header}\n\t\t\tcontent={props.content}\n\t\t\timage={props.image}\n\t\t\ticon={props.icon} />\n\t)\n\t\n}\n\nexport {Title, TitleLight};"],"names":["VisualizationFormBody","props","SpecificVisualizationType","typesAvailable","type","component","_jsx","data","visualization","index","hasPythonFile","pythonfile","name","visualizationFormUpdate","graphLinesAdd","graphLinesRemove","graphLinesUpdate","graphLinesStyleUpdate","PythonHelp","_jsxs","_Fragment","children","className","href","window","API","rel","target","VisualizationFormHeader","LabeledInput","id","placeholder","value","title","handleChange","required","LabeledTextarea","description","Fieldset","legend","ButtonAskingConfirmation","text","confirmedAction","fileInputRemove","extravariables","map","variable","toString","extraVariableUpdate","ButtonIcon","classes","handleClick","extraVariableRemove","Button","extraVariableAdd","modificationCSS","fileInputAdd","accept","Spacer","size","Object","keys","visualizationTypes","Radio","visualizationFormTypeUpdate","checked","notation","visualizationFormNotationUpdate","isSingle","visualizationFormRemove","unit","bins","labelx","labely","xmin","xmax","ymin","ymax","undefined","lineTemplate","lineIsSingle","lines","length","idx","idy","line","lineIndex","legendClassName","shape","styleIndex","styleline","idline","colorline","ConfigurationFormHeader","error","Message","message","project","projectFormUpdate","ConfigurationFormBody","visualizations","VisualizationForm","setProject","useState","useLoaderData","formState","setFormState","isDisabled","navigate","useNavigate","ressource","method","onSubmit","e","preventDefault","headers","Headers","append","fetch","credentials","body","JSON","stringify","then","response","json","result","hasOwnProperty","copy","structuredClone","currentTarget","closest","dataset","push","variableIndex","splice","file","files","fileReader","FileReader","onload","readAsDataURL","fileTemplate","Set","types","key","add","forEach","visualizationIndex","newLines","concat","icon","newVisualizationsList","visualizationTemplate","Submit","disabled","classInputType","classIsHidden","isHidden","min","max","htmlFor","readOnly","onChange","TitleLight","header","image","alt","src","content","Title","isAppListening","useContext","AppStateContext","document"],"sourceRoot":""}
{"version":3,"file":"static/js/175.682ab35c.chunk.js","mappings":"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","sources":["utils/notation.jsx","components/visualizations/singleNumber.jsx","components/visualizations/background.jsx","components/visualizations/axis.jsx","components/visualizations/histogram.jsx","components/visualizations/graph.jsx","components/visualizations/visualization.jsx","components/experiment.jsx","components/title.jsx"],"sourcesContent":["import * as d3 from \"d3\";\n\nconst formatValueAs = (value, notation) => {\n\tconst scientificNotation = d3.format('.1e');\n\treturn notation === 'Scientific' ? scientificNotation(parseFloat(value)) : parseFloat(value).toFixed(2);\n}\n\nexport default formatValueAs;","import formatValueAs from \"../../utils/notation\";\n\nconst VisualizationSingleNumber = (props) => {\n\tlet dataSN ;\n\tif (isNaN(formatValueAs(props.data, props.notation))){\n\t\tdataSN = \"_.__\";\n\t} else {\n\t\tdataSN =  formatValueAs(props.data, props.notation);\n\t}\n\treturn(<>\n\t\t<p className='visualization-number__output'>{dataSN}</p>\n\t\t<p className='visualization-number__unit'>{props.unit}</p>\n\t</>);\n}\n\nexport default VisualizationSingleNumber;","const Background = (props) => {\n\n\treturn (\n\t\t<rect\n\t\t\ttransform={`translate(${props.margins.left}, ${props.margins.top})`}\n\t\t\tstroke={props.stroke} fill='transparent'\n\t\t\twidth={props.width}\n\t\t\theight={props.height}\n\t\t/>\n\t);\n}\n\nexport default Background;","import { useMemo } from \"react\";\nimport * as d3 from \"d3\";\nimport formatValueAs from \"../../utils/notation\";\n\nconst AxisY = (props) => {\n\n\tconst dimensions = props.dimensions;\n\tconst margins = props.margins;\n\n\tconst ticks = useMemo(() => {\n\t\treturn props.yScale\n\t\t\t\t\t\t.ticks(4)\n\t\t\t\t\t\t.filter(tick => {\n\t\t\t\t\t\t\treturn (Number.isInteger(tick))\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.map((value) => {\n\t\t\t\t\t\t\treturn ({value: value, yOffset: props.yScale(value)})\n\t\t\t\t\t\t})\n\t}, [props]);\n\n\treturn (\n\t\t<svg >\n\t\t\t{\n\t\t\t\tprops.label ?\n\t\t\t\t\t<text\n\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\ttransform='rotate(-90)'\n\t\t\t\t\t\t//textAnchor='end'  // caption at the top of the axis\n\t\t\t\t\t\ttextAnchor='middle'  // caption at the middle of the axis\n\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\t//x={margins.top * -1 } // caption at the top of the axis\n\t\t\t\t\t\tx={- dimensions.height/2 } // caption at the middle of the axis\n\t\t\t\t\t\ty='30' >\n\t\t\t\t\t\t\t{props.label}\n\t\t\t\t\t\t</text>\n\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t}\n\t\t\t<path d={[\n\t\t\t\t'M', margins.left, margins.top,\n\t\t\t\t'v', dimensions.height - (margins.top + margins.bottom),\n\t\t\t].join(' ')} fill='none' stroke='currentColor' />\n\t\t\t{\n\t\t\t\tticks.map(({value, yOffset}) => (\n\t\t\t\t\t<g\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\ttransform={`translate(0, ${yOffset + margins.top})`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<line x1={margins.left} x2={dimensions.width - margins.right} stroke={props.colors.stick} />\n\t\t\t\t\t\t<text\n\t\t\t\t\t\t\ttransform={`translate(${margins.left - 10}, ${(props.type === 'Histogram') ? 0 : 10})`}\n\t\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\t\ttextAnchor='end'\n\t\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{(props.type === 'Graph' && props.notation === 'Scientific') ? formatValueAs(value, props.notation) : value}\n\t\t\t\t\t\t</text>\n\n\t\t\t\t\t</g>\n\n\t\t\t\t))\n\t\t\t}\n\t\t</svg>\n\t);\n}\n\nconst AxisX = (props) => {\n\n\tconst dimensions = props.dimensions;\n\tconst margins = props.margins;\n\n\tconst ticks = useMemo(() => {\n\t\treturn props.xScale.ticks(4)\n\t\t\t.map(value => ({ value, xOffset: props.xScale(value)}))\n\t}, [props]);\n\n\treturn (\n\t\t<svg >\n\t\t{\n\t\t\t\tprops.label ?\n\t\t\t\t\t<text\n\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t// textAnchor='end' // caption at the right of the axis\n\t\t\t\t\t\ttextAnchor='middle' // caption at the middle of the axis\n\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\t//x={dimensions.width - margins.right} // caption at the right of the axis\n\t\t\t\t\t\tx={dimensions.width/2} // caption at the middle of the axis\n\t\t\t\t\t\ty={dimensions.height - 8}\n\t\t\t\t\t>{props.label}</text>\n\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t}\n\t\t\t<path d={[\n\t\t\t\t\t'M', margins.left, (dimensions.height - margins.bottom),\n\t\t\t\t\t'h', dimensions.width - (margins.left + margins.right)\n\t\t\t\t].join(' ')}\n\t\t\t\tfill='none' stroke='currentColor' />\n\t\t\t\t{\n\t\t\t\t\tticks.map(({value, xOffset}, index) => (\n\t\t\t\t\t\t<g\n\t\t\t\t\t\t\tkey={value + index.toString()}\n\t\t\t\t\t\t\ttransform={`translate(${xOffset + margins.left}, 0)`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<line\n\t\t\t\t\t\t\t\ty1={margins.top}\n\t\t\t\t\t\t\t\ty2={dimensions.height - margins.bottom}\n\t\t\t\t\t\t\t\tstroke={props.colors.stick} />\n\n\t\t\t\t\t\t\t<text\n\t\t\t\t\t\t\t\ttransform={`translate(0,${dimensions.height + margins.top - margins.bottom})`}\n\t\t\t\t\t\t\t\tfontSize='30'\n\t\t\t\t\t\t\t\ttextAnchor='middle'\n\t\t\t\t\t\t\t\tfill='currentColor'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{props.notation === 'Scientific' ? formatValueAs(value, props.notation) : value}\n\t\t\t\t\t\t\t</text>\n\t\t\t\t\t\t</g>\n\t\t\t\t\t))\n\t\t\t\t}\n\t\t</svg>\n\t);\n}\n\nexport {\n\tAxisX,\n\tAxisY\n}","import { useMemo } from 'react';\n\nimport * as d3 from \"d3\";\n\nimport Background from \"./background\";\nimport { AxisX, AxisY } from \"./axis\";\n\nimport formatValueAs from \"../../utils/notation\";\n\nconst Bar = (props) => {\n\n\tconst maxHeight = props.dimensions.height - (props.margins.top + props.margins.bottom);\n\tconst width = (props.dimensions.width - props.margins.left - props.margins.right)/ props.bins ; \n\treturn (\n\t\t<rect\n\t\t\tstroke='black'\n\t\t\tfill='white'\n\t\t\topacity={.8}\n\t\t\tx={props.xScale(props.bucket.x0)}\n\t\t\twidth={width}\n\t\t\ty={props.yScale(props.bucket.length)}\n\t\t\theight={maxHeight - props.yScale(props.bucket.length)}\n\t\t/>\n\t);\n\n}\n\n\nconst VisualizationHistogram = (props) => {\n\n\tconst colors = props.colors;\n\tconst margins = props.margins;\n\tconst data = props.data;\n\tconst dimensions = props.dimensions;\n\tconst domain = props.domain;\n\tconst bins = props.bins ? parseInt(props.bins) : 10;\n\n\tconst getMinMax = () => { // min max of the data except if defined by the user\n\t\tlet [min, max] = [0,1]; // default value, only used when no data are present and not defined by the user\n\t\tif (data.length>0){\n\t\t\t[min, max] = d3.extent(data);\n\t\t}\t\n\t\tif (typeof domain.x.min == \"number\") // value defined by the user\n\t\t\tmin = domain.x.min;\n\t\tif (typeof domain.x.max  == \"number\")\n\t\t\tmax = domain.x.max;\n\t\treturn [min, max];\n\t};\n\n\tconst buckets = useMemo(() => {\n\t\tlet [min, max] = getMinMax();\n\t\tconst thresholds = d3.range(min, max, (max - min) / bins);\n\t\tconst bucketor = d3.bin().thresholds(thresholds) // d3.js has some trouble dealing with fixed thresholds - X0 and X1 values are not correct\n\t\t// let's fix it\n\t\tlet bucketedData = bucketor(data);\t\n\t\tlet indexThresholds = 0 ;\n\t\tfor (let i = thresholds.length ; i >= 0; i-- ){\n\t\t\tif (thresholds[i] < bucketedData[0][0]) { // buckedData[0] is the list of data in the lowest bucket containing data\n\t\t\t\tindexThresholds = i ;  // this is the index of the thresholds that contains the lowest data\n\t\t\t\tbreak ;\n\t\t\t}\n\t\t}\n\t\t\t\t\n\t\tfor (let i = 0 ; i < bucketedData.length ; i++){ // fixing the x0 and x1 - they should align with the thresholds values starting at indexThresholds\n\t\t\tbucketedData[i].x0 = thresholds[indexThresholds+i];\n\t\t\tbucketedData[i].x1 = bucketedData[i].x0 + (max - min) / bins ;\n\t\t}\n\n\n\t\treturn bucketedData;\n\t}, [data, bins]);\n\n\tconst yScale = useMemo(()=>{\n\t\treturn d3\n\t\t\t.scaleLinear()\n\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t.domain([0, 1.1 * Math.max(...buckets.map((bucket) => bucket.length))])\n\t\t\t.nice()\n\t}, [buckets, dimensions, margins]);\n\n\tconst xScale = useMemo(() => {\n\t\tconst [min, max] = getMinMax();\n\t\treturn d3\n\t\t\t.scaleLinear()\n\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t.domain([min, max])\n\t}, [data, dimensions, margins, domain]);\n\n\treturn (\n\t\t<>\n\t\t\t<svg width={dimensions.width} height={dimensions.height} >\n\t\t\t\t<rect\n\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`}\n\t\t\t\t\tfill={colors.background}\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t/>\n\t\t\t\t{(data.length>0) && // the <g></g> block is only added when data.length>0 - it draws the columns of the histogram\n\t\t\t\t<g\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`}>\n\t\t\t\t\t{\n\t\t\t\t\t\tbuckets.map((bucket, index) => (\n\t\t\t\t\t\t\t<Bar key={index.toString()}\n\t\t\t\t\t\t\t\tbins={bins}\n\t\t\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\t\t\tbucket={bucket}\n\t\t\t\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\t\t\t\tmargins={margins}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))\n\t\t\t\t\t}\n\t\t\t\t</g>}\n\t\t\t\t<AxisY\n\t\t\t\t\ttype='Histogram'\n\t\t\t\t\tyScale={yScale}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.y ? props.axisLabel.y : false }\n\t\t\t\t/>\n\t\t\t\t<AxisX\n\t\t\t\t\txScale={xScale}\n\t\t\t\t\tnotation={props.notation}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.x ? props.axisLabel.x : false }\n\t\t\t\t/>\n\t\t\t\t<Background\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\tstroke={colors.text}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t/>\n\t\t\t</svg>\n\n\n\t\t\t<p className='histogram-infos'>\n\n\t\t\t\t<span className='histogram-infos__item'>mean: {formatValueAs(d3.mean(data), props.notation)}</span>\n\t\t\t\t<span className='histogram-infos__item'>median: {formatValueAs(d3.median(data), props.notation)}</span>\n\t\t\t\t<span className='histogram-infos__item'>deviation: {data.length > 1 ? formatValueAs(d3.deviation(data), props.notation) : ' - '}</span>\n\n\t\t\t</p>\n\n\t\t</>\n\t);\n\n}\n\nexport default VisualizationHistogram;","import { useEffect, useMemo, useRef, useState } from 'react';\n\nimport * as d3 from \"d3\";\n\nimport Background from \"./background\";\nimport { AxisX, AxisY } from \"./axis\";\n\nconst Legendes = (props) => {\n\treturn (<div className='graph-legendes__wrapper'>\n\t\t{\n\t\t\tprops.data.map((element, index) => {\n\t\t\t\tif (element.idline){\n\t\t\t\t\treturn (\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='graph-legende'\n\t\t\t\t\t\t\tkey={element.idline + '_' + index.toString()}>\n\t\t\t\t\t\t\t<div style={{background:element.colorline}} className='graph-legende__colorsquare'></div>\n\t\t\t\t\t\t\t<p className='graph-legende__text'>{element.idline}</p>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t})\n\t\t}\n\t</div>);\n}\n\nconst Path = (props) => {\n\n\treturn (\n\t\t<path\n\t\t\tfill='none'\n\t\t\tstroke={props.color}\n\t\t\tstrokeWidth={3}\n\t\t\td={\n\t\t\tprops.coordinates.x.map((spot, index) => (\n\t\t\t\t\t(!index ? 'M ' : ' L ') +  props.xScale(spot) + ' ' + (props.yScale(props.coordinates.y[index])) \n\t\t\t\t)\n\t\t\t\t).join(' ')\n\t\t\t}\n\t\t/>\n\t)\n\n}\n\nconst Plots = (props) => {\n\n\treturn (<>\n\t\t{\n\n\t\t\tprops.plots.x.map((plot, index) => (\n\t\t\t\t<circle\n\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\tcx={props.xScale(plot)}\n\t\t\t\t\tcy={props.yScale(props.plots.y[index])}\n\t\t\t\t\tr={6}\n\t\t\t\t\tfill={props.color ? props.color : 'white'} />\n\t\t\t))\n\t\t}\n\t</>)\n\n}\n\n\nconst VisualizationGraph = (props) => {\n\n\tconst margins = props.margins;\n\tconst domain = props.domain;\n\tconst lines = props.lines;\n\tconst fits = props.data.fits ? props.data.fits : null;\n\tconst measures = props.data.measures ? props.data.measures : null;\n\tconst colors = props.colors;\n\tconst dimensions = props.dimensions;\n\tconst ref = useRef(null);\n\n\tconst coloredFits = fits ? (Object.keys(fits).length ? lines.map((line) => (\n\t\t{\n\t\t  coordinates: fits[line.idline],\n\t\t  color: line.colorline,\n\t\t  style: line.styleline\n\t\t}\n\t  )) : null) : null;\n\n\tconst linesMinMax = useMemo(() => {\n\n\t\tif (measures === null && fits === null)\n\t\t\treturn  ({\n\t\t\t\tx0: (typeof domain.x.min == \"number\") ? domain.x.min : 0, // default value when no data is present\n\t\t\t\tx1: (typeof domain.x.max == \"number\") ? domain.x.max : 1,\n\t\t\t\ty0: (typeof domain.y.min == \"number\") ? domain.y.min : 0,\n\t\t\t\ty1: (typeof domain.y.max == \"number\") ? domain.y.max : 1\n\t\t\t});\n\n\t\tconst everyLines = [\n\t\t\t...(Array.isArray(measures) ? measures : []),\n\t\t\t...Object.values(fits)];\n\t\tconst everyMinMax = everyLines.map((line) => {\n\t\t\treturn ({\n\t\t\t\tx0: Math.min(...line['x']),\n\t\t\t\tx1: Math.max(...line['x']),\n\t\t\t\ty0: Math.min(...line['y']),\n\t\t\t\ty1: Math.max(...line['y'])\n\t\t\t});\n\t\t})\n\n\t\tconst minMaxFromData = everyMinMax.reduce((previous, current) => (\n\t\t\t{\n\t\t\t\tx0: previous.x0 < current.x0 ? previous.x0 : current.x0,\n\t\t\t\tx1: previous.x1 > current.x1 ? previous.x1 : current.x1,\n\t\t\t\ty0: previous.y0 < current.y0 ? previous.y0 : current.y0,\n\t\t\t\ty1: previous.y1 > current.y1 ? previous.y1 : current.y1\n\t\t\t}\n\t\t));\n\n\t\treturn ({\n\t\t\tx0: (typeof domain.x.min == \"number\") ? domain.x.min : minMaxFromData.x0, // min max of the data, exept when set by the user\n\t\t\tx1: (typeof domain.x.max == \"number\") ? domain.x.max : minMaxFromData.x1,\n\t\t\ty0: (typeof domain.y.min == \"number\") ? domain.y.min : minMaxFromData.y0,\n\t\t\ty1: (typeof domain.y.max == \"number\") ? domain.y.max : minMaxFromData.y1\n\t\t});\n\n\t}, [measures, fits, domain]);\n\n\tconst [scales, setScales] = useState({\n\t\tx: d3\n\t\t\t.scaleLinear()\n\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t.domain([linesMinMax.x0, linesMinMax.x1]),\n\t\ty: d3\n\t\t\t.scaleLinear()\n\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t.domain([linesMinMax.y0, linesMinMax.y1]).nice()\n\t});\n\n\tconst whiteSpace = (min, max) => {\n\t\treturn (max - min) * 0.05;\n\t}\n\n\tconst xWhisteSpace = whiteSpace(linesMinMax.x0, linesMinMax.x1); // extra 5% margin when the max value is given by the data, so that the data point does not lie on the axis\n\tconst yWhisteSpace = whiteSpace(linesMinMax.y0, linesMinMax.y1);\n\tconst xWhisteSpaceMax = (typeof domain.x.max == \"number\") ? 0 : xWhisteSpace ; // if the value is set by the user, no extra margin\n\tconst xWhisteSpaceMin = (typeof domain.x.min == \"number\") ? 0 : xWhisteSpace ;\n\tconst yWhisteSpaceMax = (typeof domain.y.max == \"number\") ? 0 : yWhisteSpace ; \n\tconst yWhisteSpaceMin = (typeof domain.y.min == \"number\") ? 0 : yWhisteSpace ;\n\t\n\n\tuseEffect(() => {\n\t\tsetScales({\n\t\t\tx: d3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t\t.domain([linesMinMax.x0 - xWhisteSpaceMin, linesMinMax.x1 + xWhisteSpaceMax]),\n\t\t\ty: d3\n\t\t\t\t.scaleLinear()\n\t\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t\t.domain([linesMinMax.y0 - yWhisteSpaceMin, linesMinMax.y1 + yWhisteSpaceMax])\n\t\t\t\t.nice()\n\t\t})\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dimensions, linesMinMax, xWhisteSpace, yWhisteSpace])\n\n\tuseEffect(() => {\n\n\t\tif (props.isOnGoingExperiment)\n\t\t\treturn ;\n\n\t\tconst zoom = d3\n\t\t.zoom()\n\t\t.scaleExtent([0.9,3])\n\t\t.translateExtent([[0, 0], [dimensions.width, dimensions.height]])\n\t\t.on('zoom', (e) => {\n\n\t\t\tconst zoomTransform = e.transform;\n\t\t\tconst newXScale = zoomTransform.rescaleX(scales.x)\n\t\t\tconst newYScale = zoomTransform.rescaleY(scales.y)\n\n\t\t\tsetScales({\n\t\t\t\tx: d3\n\t\t\t\t\t.scaleLinear()\n\t\t\t\t\t.range([0, dimensions.width - (margins.left + margins.right)])\n\t\t\t\t\t.domain(newXScale.domain()),\n\t\t\t\ty: d3\n\t\t\t\t\t.scaleLinear()\n\t\t\t\t\t.range([dimensions.height - (margins.top + margins.bottom), 0])\n\t\t\t\t\t.domain(newYScale.domain())\n\t\t\t\t\t.nice()\n\t\t\t})\n\n\t\t})\n\n\t\td3.select(ref.current).call(zoom)\n\n\t//\treturn () => { zoom.on('zoom', null) }\n\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [dimensions, props.isOnGoingExperiment])\n\n\treturn (\n\t<>\n\n\t\t\t<svg width={dimensions.width} height={dimensions.height} ref={ref} >\n\t\t\t\t<rect\n\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`}\n\t\t\t\t\tfill={colors.background}\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t/>\n\t\t\t\t<defs>\n\t\t\t\t<clipPath id='clipath'>\n\t\t\t\t\t<rect\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\t\t\tx='0' y='0' />\n\t\t\t\t</clipPath>\n\t\t\t\t</defs>\n\t\t\t\t{!(measures === null && fits === null) && // if data are present, then plot\n\t\t\t\t\t<g\tid='svggraph'\n\t\t\t\t\t\tclipPath='url(#clipath)'\n\t\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\t\ttransform={`translate(${margins.left}, ${margins.top})`} >\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmeasures && measures.map((measure, index) => (\n\t\t\t\t\t\t\t\t<Plots\n\t\t\t\t\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\t\t\t\t\txScale={scales.x}\n\t\t\t\t\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\t\t\t\t\tplots={measure}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\tcoloredFits ?\n\t\t\t\t\t\t\t\t\tObject.entries(coloredFits).map(([fitname, fit]) => (\n\t\t\t\t\t\t\t\t\t\tfit.coordinates ?\n\t\t\t\t\t\t\t\t\t\t\tfit.style === 'Solid' ?\n\t\t\t\t\t\t\t\t\t\t\t\t<Path\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={fitname}\n\t\t\t\t\t\t\t\t\t\t\t\t\txScale={scales.x}\n\t\t\t\t\t\t\t\t\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcoordinates={fit.coordinates}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={fit.color}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t:\t<Plots\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={fitname}\n\t\t\t\t\t\t\t\t\t\t\t\t\txScale={scales.x}\n\t\t\t\t\t\t\t\t\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={fit.color}\n\t\t\t\t\t\t\t\t\t\t\t\t\tplots={fit.coordinates}\t/>\n\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t}\n\t\t\t\t\t</g>\n\t\t\t\t}\n\t\t\t\t<AxisY\n\t\t\t\t\ttype='Graph'\n\t\t\t\t\tyScale={scales.y}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.y ? props.axisLabel.y : false }\n\t\t\t\t\tnotation={props.notation}\n\t\t\t\t/>\n\t\t\t\t<AxisX\n\t\t\t\t\txScale={scales.x}\n\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t\tcolors={colors}\n\t\t\t\t\tlabel={props.axisLabel.x ? props.axisLabel.x : false }\n\t\t\t\t\tnotation={props.notation}\n\t\t\t\t/>\n\t\t\t\t<Background\n\t\t\t\t\twidth={dimensions.width - (margins.left + margins.right)}\n\t\t\t\t\theight={dimensions.height - (margins.top + margins.bottom)}\n\t\t\t\t\tstroke={colors.text}\n\t\t\t\t\tmargins={margins}\n\t\t\t\t/>\n\t\t\t</svg>\n\n\t\t\t<Legendes data={lines} />\n\n\t\t</>\n\n\t);\n\n}\n\nexport default VisualizationGraph;","import { useState, useRef, useEffect, useMemo } from 'react';\n\nimport VisualizationSingleNumber from \"./singleNumber\";\nimport VisualizationHistogram from \"./histogram\";\nimport VisualizationGraph from \"./graph\";\n\nimport './visualization.css';\nimport { ButtonIcon } from '../button';\n\nconst VisualizationFooter = (props) => {\n\n\tconst url = props.url + '/visualizations/' + props.index;\n\n\treturn (\n\t\t<div className='visualization__footer'>\n\t\t\t<div className='visualization-footer__item-left'>\n\t\t\t\t<input\n\t\t\t\t\tclassName='visualization-footer__item visualization-footer__button-fullscreen'\n\t\t\t\t\tonClick={props.handleClick}\n\t\t\t\t\tvalue={props.isFullscreen ? 'zoom_in_map' : 'zoom_out_map'}\n\t\t\t\t\ttype='button' />\n\t\t\t</div>\n\t\t\t{\n\t\t\t\t!props.isOnGoingExperiment ?\n\t\t\t\t\t<a\n\t\t\t\t\t\thref={url}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noreferrer'\n\t\t\t\t\t\tclassName='visualization-footer__item visualization-footer__dl'\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className='visualization-footer__dl-icon'>download</span>Download data (.json)\n\t\t\t\t\t</a>\n\t\t\t\t:\n\t\t\t\t\tnull\n\t\t\t}\n\t\t</div>\n\t)\n\n}\n\nconst Visualization = (props) => {\n\n\tconst margins = {\n\t\ttop: 30,\n\t\tright: 25,\n\t\tbottom: 100,\n\t\tleft: 125\n\t}\n\tconst colors = {\n\t\ttext: '#ADADAD',\n\t\tbackground: '#1B1A1A',\n\t\tstick: '#ADADAD47'\n\t}\n\tconst visualization = props.data;\n\tconst [isFullscreen, setIsFullscreen] = useState(false);\n\tconst ref = useRef(null);\n\tconst domain = useMemo(() => {\n\n\t\treturn (\n\t\t\t{\n\t\t\t\tx: {\n\t\t\t\t\tmin: visualization.xmin !== 'undefined' && !isNaN(parseFloat(visualization.xmin)) ? parseFloat(visualization.xmin) : false,\n\t\t\t\t\tmax: visualization.xmax !== 'undefined' && !isNaN(parseFloat(visualization.xmax)) ? parseFloat(visualization.xmax) : false\n\t\t\t\t},\n\t\t\t\ty: {\n\t\t\t\t\tmin: visualization.ymin !== 'undefined' && !isNaN(parseFloat(visualization.ymin)) ? parseFloat(visualization.ymin) : false,\n\t\t\t\t\tmax: visualization.ymax !== 'undefined' && !isNaN(parseFloat(visualization.ymax)) ? parseFloat(visualization.ymax) : false\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\n\t}, [visualization.xmin, visualization.xmax, visualization.ymin, visualization.ymax]);\n\n\tconst [dimensions, setDimensions] = useState({width: 0, height: window.innerHeight * (isFullscreen ? .8 : .7)});\n\n\tconst toggleFullscreen = () => {\n\t\tsetIsFullscreen(!isFullscreen);\n\t}\n\n\tuseEffect(() => {\n\n\t\tconst captureEscape = (e) => {\n\t\t\tif (e.key === 'Escape')\n\t\t\t\ttoggleFullscreen()\n\t\t}\n\n\t\tif (isFullscreen)\n\t\t\twindow.addEventListener('keyup', captureEscape);\n\n\t\treturn () => { window.removeEventListener('keyup', captureEscape) }\n\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [isFullscreen])\n\n\tuseEffect(() => {\n\n\t\tconst refWrapper = ref.current;\n\t\tconst resizeObs = new ResizeObserver(\n\t\t\t(entries) => {\n\t\t\t\tconst entry = entries[0];\n\t\t\t\tif (entry.contentRect.width !== dimensions.width){\n\t\t\t\t\tsetDimensions({\n\t\t\t\t\t\twidth: entry.contentRect.width,\n\t\t\t\t\t\theight: window.innerHeight * (isFullscreen ? .8 : .7)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tresizeObs.observe(refWrapper);\n\t\treturn () => resizeObs.unobserve(refWrapper)\n\n\t}, [dimensions, isFullscreen, ref])\n\n\tconst filteredData = useMemo(() => {\n\n\t\tif (visualization.displayedData === null)\n\t\t\treturn [];\n\n\t\tif (visualization.displayedData.length === 0)\n\t\t\treturn visualization.displayedData;\n\n\t\tif (domain.x.min === false && domain.x.max === false\n\t\t\t&& domain.y.min === false && domain.y.max === false)\n\t\t\treturn visualization.displayedData;\n\n\t\tif (visualization.type === 'Histogram'){\n\n\t\t\tconst isInDomain = (item) => {\n\t\t\t\tif ((domain.x.min === false || item >= domain.x.min)\n\t\t\t\t\t&& (domain.x.max === false || item <= domain.x.max)){\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn visualization.displayedData.filter(isInDomain)\n\t\t}\n\n\t\tif (visualization.type === 'Graph'){\n\n\t\t\treturn visualization.displayedData;\n\t\t\t/*\n\t\t\tconst filterItem = (item) => {\n\n\t\t\t\tconst newItem = {\n\t\t\t\t\tx: [],\n\t\t\t\t\ty: []\n\t\t\t\t};\n\t\t\t\titem.x.forEach((value, index) => {\n\n\t\t\t\t\tif (((domain.x.min === false || value >= domain.x.min)\n\t\t\t\t\t\t&& (domain.x.max === false || value <= domain.x.max))\n\t\t\t\t\t\t&&\n\t\t\t\t\t\t((domain.y.min === false || item.y[index] >= domain.y.min)\n\t\t\t\t\t\t&& (domain.y.max === false || item.y[index] <= domain.y.max))\n\t\t\t\t\t){\n\t\t\t\t\t\tnewItem.x.push(value)\n\t\t\t\t\t\tnewItem.y.push(item.y[index])\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t\treturn newItem;\n\n\t\t\t}\n\n\t\t\tlet filteredMeasures = [];\n\t\t\tvisualization.displayedData.measures.forEach((item) => {\n\n\t\t\t\tconst newItem = filterItem(item);\n\n\t\t\t\tif (newItem.x.length)\n\t\t\t\t\tfilteredMeasures.push(newItem)\n\n\t\t\t});\n\n\t\t\tlet filteredFits = {};\n\t\t\tObject.entries(visualization.displayedData.fits).forEach(([key, value]) => {\n\t\t\t\tconst newItem = filterItem(value);\n\t\t\t\tif (newItem.x.length)\n\t\t\t\t\tfilteredFits[key] = newItem;\n\t\t\t})\n\n\t\t\tif (!filteredMeasures.length && !Object.keys(filteredFits).length){\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tmeasures: filteredMeasures,\n\t\t\t\tfits: filteredFits\n\t\t\t}\n\t\t\t*/\n\t\t}\n\n\t\treturn visualization.displayedData;\n\n\t}, [visualization.displayedData, domain, visualization.type]);\n\n\treturn (\n\n\t\t<article className={'visualization' + (isFullscreen ? ' visualization--fullscreen' : '') + ' visualization--' + visualization.type.toLowerCase() } >\n\n\t\t\t<div className='visualization__frame'>\n\n\t\t\t\t{\n\t\t\t\t\tisFullscreen ?\n\t\t\t\t\t\t<ButtonIcon\n\t\t\t\t\t\t\thandleClick={toggleFullscreen}\n\t\t\t\t\t\t\tclasses={'visualization__close-button'}\n\t\t\t\t\t\t\ticon='close'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t: null\n\t\t\t\t}\n\n\t\t\t\t<div className='visualization__inner-padding'>\n\n\t\t\t\t\t<div className='visualization__header'>\n\t\t\t\t\t\t<h2 className='visualization__title'>{visualization.title}</h2>\n\t\t\t\t\t\t<p className='visualization__participants-number'>\n\t\t\t\t\t\t\t<span>{visualization.contributions_total ? visualization.contributions_total : 0}</span>\n\t\t\t\t\t\t\t<span className='visualization__participants-icon'>group</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='visualization__wrapper' ref={ref} >\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// (dimensions.width === 0 || filteredData.length === 0)  ?\n\t\t\t\t\t\t\t// \t<WaitingData isOnGoingExperiment={props.isOnGoingExperiment} />\n\t\t\t\t\t\t\t// :\n\t\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\t\t'Single Number':<VisualizationSingleNumber\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tunit={visualization.unit}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={filteredData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotation={visualization.notation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\t/>,\n\n\t\t\t\t\t\t\t\t\t'Histogram': \t<VisualizationHistogram\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdomain={domain}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbins={visualization.bins}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolors={colors}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taxisLabel={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: visualization.labelx,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: visualization.labely\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotation={visualization.notation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={filteredData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargins={margins} />,\n\n\t\t\t\t\t\t\t\t\t'Graph':  \t\t<VisualizationGraph\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdimensions={dimensions}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolors={colors}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdomain={domain}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taxisLabel={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx: visualization.labelx,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty: visualization.labely\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotation={visualization.notation}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={filteredData}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlines={visualization.lines}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmargins={margins} />\n\t\t\t\t\t\t\t\t}[visualization.type]\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t{\n\t\t\t\t\tvisualization.description ?\n\t\t\t\t\t\t<p className='visualization__description'>{visualization.description}</p>\n\t\t\t\t\t:\n\t\t\t\t\t\tnull\n\t\t\t\t}\n\n\t\t\t</div>\n\t\t\t<VisualizationFooter\n\t\t\t\tisFullscreen={isFullscreen}\n\t\t\t\thandleClick={toggleFullscreen}\n\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\n\t\t\t\tindex={props.index}\n\t\t\t\turl={props.url} />\n\t\t</article>\n\n\t);\n}\n\nexport default Visualization;","/*\n\n\t<Experiment\n\t\t<Visualisations : [\n\t\t\t{\n\n\t\t\t\t\tSingleNumber || Histogram || Graph\n\t\t\t\t\tAxisX, AxisY\n\t\t\t\t\tBackground\n\t\t\t\t\tVisualizationFooter\n\t\t\t}\n\t\t\t...\n\t\t] />\n\t/>\n\n\n*/\n\nimport { useContext, useEffect, useState } from 'react';\n\nimport Visualization from './visualizations/visualization.jsx';\nimport {Title} from '../components/title.jsx';\nimport Loader from '../components/loader';\nimport Message from '../components/message.jsx';\nimport { AppStateContext } from '../context.jsx';\n\nimport loadingGIF from '../images/loading.gif';\n\nconst Experiment = (props) => {\n\n\tconst [experiment, setExperiment] = useState({\n\t\tisLoaded: false,\n\t\terror: false,\n\t\tdata: null\n\t});\n\n\tconst setIsAppListening = useContext(AppStateContext).setIsAppListening;\n\n\tuseEffect(() => {\n\n\t\tif (!props.isOnGoingExperiment && experiment.isLoaded)\n\t\t\treturn ;\n\n\t\tconst fetchExperiment = (fetchURL) => {\n\t\t\tfetch(fetchURL, {credentials: 'include'})\n\t\t\t.then(response => response.json())\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tif (result === null){\n\t\t\t\t\t\tsetExperiment ({...experiment,\n\t\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\t\terror: 'No data received'\n\t\t\t\t\t\t})\n\t\t\t\t\t} else if (result.hasOwnProperty('error')){\n\t\t\t\t\t\tsetExperiment ({...experiment,\n\t\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\t\terror: result.error\n\t\t\t\t\t\t})\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (result === 'closing')\n\t\t\t\t\t\t\tsetIsAppListening(false);\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tsetExperiment({\n\t\t\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t\t\tdata: result\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tsetExperiment ({...experiment,\n\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t\terror: String(error)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (props.isOnGoingExperiment){\n\t\t\tconst interval = setInterval(\n\t\t\t\tfetchExperiment,\n\t\t\t\t1000,\n\t\t\t\tprops.fetchURL\n\t\t\t);\n\t\t\treturn () => { clearInterval(interval) }\n\t\t} else {\n\t\t\tfetchExperiment(props.fetchURL);\n\t\t}\n\n\t}, [experiment, props, setIsAppListening]);\n\n\tif (!experiment.isLoaded)\n\t\treturn <Loader />\n\n\tif (experiment.error)\n\t\treturn <Message type='error' message={experiment.error} />\n\n\treturn (<>\n\t\t<Title\n\t\t\theader={props.title}\n\t\t\tcontent={experiment.data.title}\n\t\t\ticon={props.isOnGoingExperiment ? false : 'square_foot'}\n\t\t\timage={props.isOnGoingExperiment ? loadingGIF : false}\n\t\t\t/>\n\t\t<p className='experiment__description'>{experiment.data.description}</p>\n\t\t{\n\t\t\texperiment.data.visualizations.map((visualization, index) => (\n\t\t\t\t<Visualization\n\t\t\t\t\tindex={index}\n\t\t\t\t\turl={props.fetchURL}\n\t\t\t\t\tisOnGoingExperiment={props.isOnGoingExperiment}\n\t\t\t\t\tkey={visualization.title + '_' + index.toString()}\n\t\t\t\t\tdata={visualization} />\n\t\t\t))\n\t\t}\n\t</>);\n};\n\nexport default Experiment;","import React, { useContext } from 'react';\n\nimport './title.css';\n\nimport { AppStateContext } from '../context.jsx';\n\nconst TitleLight = (props) => {\n\t// made for 404 error page, unable to get context\n\treturn (\n\t\t<div className='title'>\n\t\t\t<p className='title__header'>\n\t\t\t\t{ props.header }\n\t\t\t\t{\n\t\t\t\t\tprops.icon ? \n\t\t\t\t\t<span className='title__icon'>\n\t\t\t\t\t\t{props.icon}\n\t\t\t\t\t</span>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tprops.image ?\n\t\t\t\t\t<img className='title__image' alt='' src={props.image} />\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</p>\n\t\t\t<h1 className='title__content'>{ props.content }</h1>\n\t\t</div>\n\t);\n}\n\nconst Title = (props) => {\n\n\tconst isAppListening = useContext(AppStateContext).isAppListening;\n\n\tdocument.title = (isAppListening === true ? '🟩' : '🟧') + ' phyphox, ' + props.content;\n\t\n\treturn (\n\t\t<TitleLight\n\t\t\theader={props.header}\n\t\t\tcontent={props.content}\n\t\t\timage={props.image}\n\t\t\ticon={props.icon} />\n\t)\n\t\n}\n\nexport {Title, TitleLight};"],"names":["formatValueAs","value","notation","scientificNotation","d3","parseFloat","toFixed","props","dataSN","isNaN","data","_jsxs","_Fragment","children","_jsx","className","unit","transform","margins","left","top","stroke","fill","width","height","AxisY","dimensions","ticks","useMemo","yScale","filter","tick","Number","isInteger","map","yOffset","label","textAnchor","fontSize","x","y","d","bottom","join","_ref","x1","x2","right","colors","stick","type","AxisX","xScale","xOffset","_ref2","index","y1","y2","toString","Bar","maxHeight","bins","opacity","bucket","x0","length","domain","parseInt","getMinMax","min","max","buckets","thresholds","bucketedData","bucketor","indexThresholds","i","range","Math","nice","background","axisLabel","Background","text","Legendes","element","idline","style","colorline","Path","color","strokeWidth","coordinates","spot","Plots","plots","plot","cx","cy","r","lines","fits","measures","ref","useRef","coloredFits","Object","keys","line","styleline","linesMinMax","y0","minMaxFromData","Array","isArray","values","reduce","previous","current","scales","setScales","useState","whiteSpace","xWhisteSpace","yWhisteSpace","xWhisteSpaceMax","xWhisteSpaceMin","yWhisteSpaceMax","yWhisteSpaceMin","useEffect","isOnGoingExperiment","zoom","scaleExtent","translateExtent","on","e","zoomTransform","newXScale","rescaleX","newYScale","rescaleY","call","id","clipPath","measure","entries","fitname","fit","VisualizationFooter","url","onClick","handleClick","isFullscreen","href","target","rel","visualization","setIsFullscreen","xmin","xmax","ymin","ymax","setDimensions","window","innerHeight","toggleFullscreen","captureEscape","key","addEventListener","removeEventListener","refWrapper","resizeObs","ResizeObserver","entry","contentRect","observe","unobserve","filteredData","displayedData","isInDomain","item","toLowerCase","ButtonIcon","classes","icon","title","contributions_total","VisualizationSingleNumber","VisualizationHistogram","labelx","labely","VisualizationGraph","description","experiment","setExperiment","isLoaded","error","setIsAppListening","useContext","AppStateContext","fetchExperiment","fetchURL","fetch","credentials","then","response","json","result","hasOwnProperty","String","interval","setInterval","clearInterval","Message","message","Title","header","content","image","visualizations","Visualization","Loader","TitleLight","alt","src","isAppListening","document"],"sourceRoot":""}
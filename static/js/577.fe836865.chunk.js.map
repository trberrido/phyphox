{"version":3,"file":"static/js/577.fe836865.chunk.js","mappings":"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","sources":["components/form.jsx","components/message.jsx","components/title.jsx","pages/login.jsx"],"sourcesContent":["import React from 'react';\n\nimport './form.css';\n\nconst Fieldset = (props) => {\n\treturn (\n\t\t<fieldset className={'form__fieldset' + (props.className ? ' ' + props.className : '')}>\n\t\t\t<legend className={'form-fieldset__legend' + (props.legendClassName ? ' ' + props.legendClassName : '')}>{props.legend}</legend>\n\t\t\t{props.children}\n\t\t</fieldset>\n\t);\n}\n\nconst LabeledInput = (props) => {\n\n\tconst modificationCSS = props.modificationCSS ? props.modificationCSS : 'regular';\n\tconst classInputType = props.type === 'color' ? '-color' : '';\n\tconst classIsHidden = props.isHidden ? ' form__labeled-input-container--hidden' : '';\n\tconst min = props.min === 'undefined' ? null : props.min;\n\tconst max = props.max === 'undefined' ? null : props.max;\n\n\treturn (\n\t\t<div className={'form__labeled-input-container' + classIsHidden + (props.modificationCSS ? ' form__labeled-input-container--' + props.modificationCSS : '')} >\n\t\t\t<label\n\t\t\t\thtmlFor={props.id}\n\t\t\t\tclassName={'form__label form__label--' + modificationCSS }>\n\t\t\t\t\t{props.placeholder}\n\t\t\t</label>\n\t\t\t{\n\t\t\t\tprops.icon ?\n\t\t\t\t<span className='form__input-icon'>{props.icon}</span>\n\t\t\t\t: null\n\t\t\t}\n\t\t\t<input\n\t\t\t\treadOnly={props.readOnly}\n\t\t\t\tvalue={props.value}\n\t\t\t\tonChange={props.handleChange}\n\t\t\t\tname={props.id}\n\t\t\t\tclassName={\n\t\t\t\t\t'form__input' + classInputType\n\t\t\t\t\t+ ' form__input--' + modificationCSS\n\t\t\t\t\t+ (props.icon ? ' form__input-with-icon' : ' form__input-text-only')\n\t\t\t\t}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tmin={min}\n\t\t\t\tmax={max}\n\t\t\t\ttype={props.type ? props.type : 'text'}\n\t\t\t\taccept={props.accept ? props.accept : null}\n\t\t\t\trequired={props.required} />\n\t\t</div>\n\t);\n}\n\nconst Radio = (props) => {\n\treturn (<span className='input-radio__wrapper'>\n\t\t<input\n\t\t\tclassName='input-radio__input'\n\t\t\tonChange={props.handleChange}\n\t\t\tname={props.id}\n\t\t\trequired={props.required}\n\t\t\tvalue={props.placeholder}\n\t\t\tchecked={props.checked}\n\t\t\ttype='radio' />\n\t\t<label htmlFor={props.id} >\n\t\t\t{props.placeholder}\n\t\t</label>\n\t</span>)\n}\n\nconst LabeledTextarea = (props) => {\n\treturn (<>\n\t\t<label\n\t\t\thtmlFor={props.id}\n\t\t\tclassName='form__label form__label--regular'>\n\t\t\t\t{props.placeholder}\n\t\t</label>\n\t\t<textarea\n\t\t\tvalue={props.value}\n\t\t\tonChange={props.handleChange}\n\t\t\tname={props.id}\n\t\t\tclassName='form__textarea form__textarea--regular'\n\t\t\tplaceholder={props.placeholder}\n\t\t\ttype={props.type}\n\t\t\trequired={props.required} />\n\t</>)\n}\n\nconst Submit = (props) => {\n\treturn (\n\t\t<input\n\t\t\tclassName={'form__submit button button--important ' +  (props.disabled ? 'form__submit--disabled' : '') }\n\t\t\tdisabled={props.disabled}\n\t\t\ttype='submit'\n\t\t\tvalue={props.text} />\n\t);\n}\n\nexport {LabeledInput, LabeledTextarea, Submit, Radio, Fieldset};","import React from 'react';\nimport './message.css';\n\nconst Message = (props) => {\n\treturn (\n\t\t<p className={\"message message--\" + (props.type ? props.type : 'info')}>{props.message}</p>\n\t)\n}\n\nexport default Message;","import React, { useContext } from 'react';\n\nimport './title.css';\n\nimport { AppStateContext } from '../context.jsx';\n\nconst TitleLight = (props) => {\n\t// made for 404 error page, unable to get context\n\treturn (\n\t\t<div className='title'>\n\t\t\t<p className='title__header'>\n\t\t\t\t{ props.header }\n\t\t\t\t{\n\t\t\t\t\tprops.icon ? \n\t\t\t\t\t<span className='title__icon'>\n\t\t\t\t\t\t{props.icon}\n\t\t\t\t\t</span>\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tprops.image ?\n\t\t\t\t\t<img className='title__image' alt='' src={props.image} />\n\t\t\t\t\t: null\n\t\t\t\t}\n\t\t\t</p>\n\t\t\t<h1 className='title__content'>{ props.content }</h1>\n\t\t</div>\n\t);\n}\n\nconst Title = (props) => {\n\n\tconst isAppListening = useContext(AppStateContext).isAppListening;\n\n\tdocument.title = (isAppListening ? 'ðŸŸ©' : 'ðŸŸ§') + ' phyphox, ' + props.content;\n\t\n\treturn (\n\t\t<TitleLight\n\t\t\theader={props.header}\n\t\t\tcontent={props.content}\n\t\t\timage={props.image}\n\t\t\ticon={props.icon} />\n\t)\n\t\n}\n\nexport {Title, TitleLight};","/*\n\tThe login process is made in two steps :\n\t\t> email (POST if user doesn't exist, PUT if so)\n\t\t> password (PUT)\n*/\n\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate, Navigate, useLoaderData } from \"react-router-dom\";\n\nimport {Title} from '../components/title.jsx';\nimport Loader from '../components/loader.jsx';\nimport { LabeledInput, Submit } from '../components/form.jsx';\nimport Message from '../components/message.jsx';\nimport { AuthentificationContext } from '../context.jsx';\n\nimport '../components/form.css';\n\nconst PageLogin = () => {\n\n\tconst {isUserAuthentificated, setIsUserAuthentificated} = useContext(AuthentificationContext);\n\tlet navigate = useNavigate();\n\n\tconst [credentials, setCredentials] = useState({});\n\n\tconst [formState, setFormState] = useState({\n\t\tisDisabled: false,\n\t\terror: false,\n\t\tstep: 'email',\n\t\tdoesUserExist: useLoaderData()\n\t});\n\n\tconst handleInputChange = (e) => {\n\t\tsetCredentials({...credentials, [e.target.name]: e.target.value});\n\t}\n\n\tconst resendPassword = (e) => {\n\t\te.preventDefault();\n\t\tsetFormState({...formState, step: 'email'});\n\t}\n\n\tfunction handleSubmit(e){\n\n\t\te.preventDefault();\n\t\tsetFormState({...formState, isDisabled: true});\n\n\t\tfetch(window.API + '/api/user/',\n\t\t\t{\n\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\tmethod: (formState.doesUserExist ? 'PUT' : 'POST'),\n\t\t\t\tcredentials: 'include',\n\t\t\t\tbody: JSON.stringify(credentials)\n\t\t\t}\n\t\t)\n\t\t.then((response) => response.json())\n\t\t.then((result) => {\n\n\t\t\t\tif (result.hasOwnProperty('error')){\n\n\t\t\t\t\tsetFormState({...formState, isDisabled: false, error: result.error})\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif (formState.step === 'email'){\n\n\t\t\t\t\t\tsetFormState({\n\t\t\t\t\t\t\t...formState,\n\t\t\t\t\t\t\terror: false,\n\t\t\t\t\t\t\tstep: 'password',\n\t\t\t\t\t\t\tisDisabled: false\n\t\t\t\t\t\t});\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetIsUserAuthentificated(true);\n\t\t\t\t\t\tnavigate('/administration', { replace: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tsetFormState({...formState, error: error, isDisabled: false});\n\t\t\t}\n\t\t)\n\n\t}\n\n\tif (isUserAuthentificated === null){\n\t\treturn <Loader />;\n\t}\n\n\tif (isUserAuthentificated){\n\t\treturn <Navigate to=\"/administration\" replace />;\n\t}\n\n\treturn (\n\t\t<>\n\n\t\t\t<Title header='Adminstration' content={formState.doesUserExist ? 'Log in to your account' : 'Create a new user'}/>\n\t\t\n\t\t\t{formState.error && <Message type='error' message={formState.error} />}\n\t\t\t\n\t\t\t<form id='form' className='form' onSubmit={handleSubmit}>\n\t\t\t\t{(formState.step === 'email') ?\n\n\t\t\t\t\t<LabeledInput\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\tmodificationCSS='regular form__label--small'\n\t\t\t\t\t\ticon='mail'\n\t\t\t\t\t\tisHidden={false}\n\t\t\t\t\t\treadOnly={false}\n\t\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\t\tvalue={(credentials.email ? credentials.email : '')}\n\t\t\t\t\t\thandleChange={handleInputChange}\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\trequired={true}\n\t\t\t\t\t/>\n\t\t\t\t:\n\t\t\t\t\t<>\n\t\t\t\t\t\n\t\t\t\t\t\t{ !formState.error && <Message message='A code has been sent you by email.' /> }\n\t\t\t\t\t\t<LabeledInput\n\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\ticon='key'\n\t\t\t\t\t\t\tmodificationCSS='regular form__label--small'\n\t\t\t\t\t\t\tplaceholder='Received password'\n\t\t\t\t\t\t\tvalue={(credentials.password ? credentials.password : '')}\n\t\t\t\t\t\t\thandleChange={handleInputChange}\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\trequired={true}\t/>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t<input type='button' className='form__button--reset' onClick={resendPassword} value='Send a new password' /><br />\n\t\t\t\t\t</>\n\n\t\t\t\t}\n\t\t\t\t<Submit text={formState.doesUserExist ? 'Authentificate' : 'Create new user'} disabled={formState.isDisabled} />\n\t\t\t</form>\n\t\t\t\n\t\t</>\n\t);\n};\n\nexport default PageLogin;"],"names":["Fieldset","props","className","legendClassName","legend","children","LabeledInput","modificationCSS","classInputType","type","classIsHidden","isHidden","min","max","htmlFor","id","placeholder","icon","readOnly","value","onChange","handleChange","name","accept","required","Radio","checked","LabeledTextarea","Submit","disabled","text","message","TitleLight","header","image","alt","src","content","Title","isAppListening","useContext","AppStateContext","document","title","AuthentificationContext","isUserAuthentificated","setIsUserAuthentificated","navigate","useNavigate","useState","credentials","setCredentials","isDisabled","error","step","doesUserExist","useLoaderData","formState","setFormState","handleInputChange","e","target","to","replace","onSubmit","preventDefault","fetch","window","API","headers","method","body","JSON","stringify","then","response","json","result","hasOwnProperty","email","password","onClick"],"sourceRoot":""}